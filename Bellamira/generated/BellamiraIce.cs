// **********************************************************************
//
// Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.0
//
// <auto-generated>
//
// Generated from file `BellamiraIce.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


using _System = global::System;
using _Microsoft = global::Microsoft;

#pragma warning disable 1591

namespace IceCompactId
{
}

namespace Bellamira
{
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
#if !SILVERLIGHT
    [_System.Serializable]
#endif
    public partial class Group : _System.ICloneable
    {
        #region Slice data members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public int id;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public string nameGroup;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public Bellamira.User teacher;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public Bellamira.User helper;

        #endregion

        #region Constructors

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public Group()
        {
            nameGroup = "";
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public Group(int id, string nameGroup, Bellamira.User teacher, Bellamira.User helper)
        {
            this.id = id;
            this.nameGroup = nameGroup;
            this.teacher = teacher;
            this.helper = helper;
        }

        #endregion

        #region ICloneable members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public object Clone()
        {
            return MemberwiseClone();
        }

        #endregion

        #region Object members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public override int GetHashCode()
        {
            int h__ = 5381;
            IceInternal.HashUtil.hashAdd(ref h__, "::Bellamira::Group");
            IceInternal.HashUtil.hashAdd(ref h__, id);
            IceInternal.HashUtil.hashAdd(ref h__, nameGroup);
            IceInternal.HashUtil.hashAdd(ref h__, teacher);
            IceInternal.HashUtil.hashAdd(ref h__, helper);
            return h__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public override bool Equals(object other__)
        {
            if(object.ReferenceEquals(this, other__))
            {
                return true;
            }
            if(other__ == null)
            {
                return false;
            }
            if(GetType() != other__.GetType())
            {
                return false;
            }
            Group o__ = (Group)other__;
            if(!id.Equals(o__.id))
            {
                return false;
            }
            if(nameGroup == null)
            {
                if(o__.nameGroup != null)
                {
                    return false;
                }
            }
            else
            {
                if(!nameGroup.Equals(o__.nameGroup))
                {
                    return false;
                }
            }
            if(teacher == null)
            {
                if(o__.teacher != null)
                {
                    return false;
                }
            }
            else
            {
                if(!teacher.Equals(o__.teacher))
                {
                    return false;
                }
            }
            if(helper == null)
            {
                if(o__.helper != null)
                {
                    return false;
                }
            }
            else
            {
                if(!helper.Equals(o__.helper))
                {
                    return false;
                }
            }
            return true;
        }

        #endregion

        #region Comparison members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public static bool operator==(Group lhs__, Group rhs__)
        {
            return Equals(lhs__, rhs__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public static bool operator!=(Group lhs__, Group rhs__)
        {
            return !Equals(lhs__, rhs__);
        }

        #endregion

        #region Marshalling support

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public void write__(IceInternal.BasicStream os__)
        {
            os__.writeInt(id);
            os__.writeString(nameGroup);
            os__.writeObject(teacher);
            os__.writeObject(helper);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public sealed class Patcher__ : IceInternal.Patcher
        {
            internal Patcher__(string type, Group instance, int member) : base(type)
            {
                _instance = instance;
                _member = member;
            }

            public override void patch(Ice.Object v)
            {
                try
                {
                    switch(_member)
                    {
                    case 0:
                        _instance.teacher = (Bellamira.User)v;
                        break;
                    case 1:
                        _instance.helper = (Bellamira.User)v;
                        break;
                    }
                }
                catch(_System.InvalidCastException)
                {
                    IceInternal.Ex.throwUOE(type(), v.ice_id());
                }
            }

            private Group _instance;
            private int _member;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public void read__(IceInternal.BasicStream is__)
        {
            id = is__.readInt();
            nameGroup = is__.readString();
            is__.readObject(new Patcher__(Bellamira.User.ice_staticId(), this, 0));
            is__.readObject(new Patcher__(Bellamira.User.ice_staticId(), this, 1));
        }
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public static void write__(IceInternal.BasicStream os__, Group v__)
        {
            if(v__ == null)
            {
                nullMarshalValue__.write__(os__);
            }
            else
            {
                v__.write__(os__);
            }
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public static Group read__(IceInternal.BasicStream is__, Group v__)
        {
            if(v__ == null)
            {
                v__ = new Group();
            }
            v__.read__(is__);
            return v__;
        }
        
        private static readonly Group nullMarshalValue__ = new Group();

        #endregion
    }

    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
#if !SILVERLIGHT
    [_System.Serializable]
#endif
    public partial class UserType : _System.ICloneable
    {
        #region Slice data members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public int id;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public string nameType;

        #endregion

        #region Constructors

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public UserType()
        {
            nameType = "";
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public UserType(int id, string nameType)
        {
            this.id = id;
            this.nameType = nameType;
        }

        #endregion

        #region ICloneable members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public object Clone()
        {
            return MemberwiseClone();
        }

        #endregion

        #region Object members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public override int GetHashCode()
        {
            int h__ = 5381;
            IceInternal.HashUtil.hashAdd(ref h__, "::Bellamira::UserType");
            IceInternal.HashUtil.hashAdd(ref h__, id);
            IceInternal.HashUtil.hashAdd(ref h__, nameType);
            return h__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public override bool Equals(object other__)
        {
            if(object.ReferenceEquals(this, other__))
            {
                return true;
            }
            if(other__ == null)
            {
                return false;
            }
            if(GetType() != other__.GetType())
            {
                return false;
            }
            UserType o__ = (UserType)other__;
            if(!id.Equals(o__.id))
            {
                return false;
            }
            if(nameType == null)
            {
                if(o__.nameType != null)
                {
                    return false;
                }
            }
            else
            {
                if(!nameType.Equals(o__.nameType))
                {
                    return false;
                }
            }
            return true;
        }

        #endregion

        #region Comparison members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public static bool operator==(UserType lhs__, UserType rhs__)
        {
            return Equals(lhs__, rhs__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public static bool operator!=(UserType lhs__, UserType rhs__)
        {
            return !Equals(lhs__, rhs__);
        }

        #endregion

        #region Marshalling support

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public void write__(IceInternal.BasicStream os__)
        {
            os__.writeInt(id);
            os__.writeString(nameType);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public void read__(IceInternal.BasicStream is__)
        {
            id = is__.readInt();
            nameType = is__.readString();
        }
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public static void write__(IceInternal.BasicStream os__, UserType v__)
        {
            if(v__ == null)
            {
                nullMarshalValue__.write__(os__);
            }
            else
            {
                v__.write__(os__);
            }
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public static UserType read__(IceInternal.BasicStream is__, UserType v__)
        {
            if(v__ == null)
            {
                v__ = new UserType();
            }
            v__.read__(is__);
            return v__;
        }
        
        private static readonly UserType nullMarshalValue__ = new UserType();

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
#if !SILVERLIGHT
    [_System.Serializable]
#endif
    public partial class User : Ice.Object
    {
        #region Slice data members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public string login;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public string password;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public string fam;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public string name;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public string otch;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public Bellamira.UserType type;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public Bellamira.Group group;

        #endregion

        #region Constructors

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public User()
        {
            login = "";
            password = "";
            fam = "";
            name = "";
            otch = "";
            type = new Bellamira.UserType();
            group = new Bellamira.Group();
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public User(string login, string password, string fam, string name, string otch, Bellamira.UserType type, Bellamira.Group group)
        {
            this.login = login;
            this.password = password;
            this.fam = fam;
            this.name = name;
            this.otch = otch;
            this.type = type;
            this.group = group;
        }

        #endregion

        #region Slice type-related members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public static readonly string[] ids__ = 
        {
            "::Bellamira::User",
            "::Ice::Object"
        };

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public virtual bool ice_isA(string s)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public virtual bool ice_isA(string s, Ice.Current current__)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public virtual void ice_ping()
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public virtual void ice_ping(Ice.Current current__)
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public virtual string[] ice_ids()
        {
            return ids__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public virtual string[] ice_ids(Ice.Current current__)
        {
            return ids__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public virtual string ice_id()
        {
            return ids__[0];
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public virtual string ice_id(Ice.Current current__)
        {
            return ids__[0];
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public static string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Operation dispatch

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public virtual Ice.DispatchStatus ice_dispatch(Ice.Request request, Ice.DispatchInterceptorAsyncCallback cb)
        {
            IceInternal.Incoming inc = (IceInternal.Incoming)request;
            if(cb != null)
            {
                inc.push(cb);
            }
            try
            {
                inc.startOver();
                return dispatch__(inc, inc.getCurrent());
            }
            finally
            {
                if(cb != null)
                {
                    inc.pop();
                }
            }
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public virtual Ice.DispatchStatus ice_dispatch(Ice.Request request)
        {
            return ice_dispatch(request, null);
        }

        private static string[] all__ =
        {
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping"
        };

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public virtual Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
        {
            int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return Ice.ObjectImpl.ice_id___(this, inS__, current__);
                }
                case 1:
                {
                    return Ice.ObjectImpl.ice_ids___(this, inS__, current__);
                }
                case 2:
                {
                    return Ice.ObjectImpl.ice_isA___(this, inS__, current__);
                }
                case 3:
                {
                    return Ice.ObjectImpl.ice_ping___(this, inS__, current__);
                }
            }

            _System.Diagnostics.Debug.Assert(false);
            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
        }

        #endregion

        #region Marshaling support

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public virtual void ice_preMarshal()
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public virtual void ice_postUnmarshal()
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public virtual void write__(IceInternal.BasicStream os__)
        {
            os__.startWriteObject(null);
            writeImpl__(os__);
            os__.endWriteObject();
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public virtual void read__(IceInternal.BasicStream is__)
        {
            is__.startReadObject();
            readImpl__(is__);
            is__.endReadObject(false);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public virtual void write__(Ice.OutputStream outS__)
        {
            outS__.startObject(null);
            writeImpl__(outS__);
            outS__.endObject();
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public virtual void read__(Ice.InputStream inS__)
        {
            inS__.startObject();
            readImpl__(inS__);
            inS__.endObject(false);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        protected virtual void writeImpl__(IceInternal.BasicStream os__)
        {
            os__.startWriteSlice(ice_staticId(), -1, true);
            os__.writeString(login);
            os__.writeString(password);
            os__.writeString(fam);
            os__.writeString(name);
            os__.writeString(otch);
            Bellamira.UserType.write__(os__, type);
            Bellamira.Group.write__(os__, group);
            os__.endWriteSlice();
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        protected virtual void readImpl__(IceInternal.BasicStream is__)
        {
            is__.startReadSlice();
            login = is__.readString();
            password = is__.readString();
            fam = is__.readString();
            name = is__.readString();
            otch = is__.readString();
            type = Bellamira.UserType.read__(is__, type);
            group = Bellamira.Group.read__(is__, group);
            is__.endReadSlice();
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        protected virtual void writeImpl__(Ice.OutputStream os__)
        {
            throw new Ice.MarshalException("class was not generated with stream support");
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        protected virtual void readImpl__(Ice.InputStream is__)
        {
            throw new Ice.MarshalException("class was not generated with stream support");
        }

        #endregion

        #region ICloneable members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public object Clone()
        {
            return MemberwiseClone();
        }

        #endregion
    }

    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
#if !SILVERLIGHT
    [_System.Serializable]
#endif
    public partial class TimeTableEntry : _System.ICloneable
    {
        #region Slice data members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public int id;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public string dayWeek;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public long time;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public Bellamira.Group group;

        #endregion

        #region Constructors

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public TimeTableEntry()
        {
            dayWeek = "";
            group = new Bellamira.Group();
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public TimeTableEntry(int id, string dayWeek, long time, Bellamira.Group group)
        {
            this.id = id;
            this.dayWeek = dayWeek;
            this.time = time;
            this.group = group;
        }

        #endregion

        #region ICloneable members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public object Clone()
        {
            return MemberwiseClone();
        }

        #endregion

        #region Object members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public override int GetHashCode()
        {
            int h__ = 5381;
            IceInternal.HashUtil.hashAdd(ref h__, "::Bellamira::TimeTableEntry");
            IceInternal.HashUtil.hashAdd(ref h__, id);
            IceInternal.HashUtil.hashAdd(ref h__, dayWeek);
            IceInternal.HashUtil.hashAdd(ref h__, time);
            IceInternal.HashUtil.hashAdd(ref h__, group);
            return h__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public override bool Equals(object other__)
        {
            if(object.ReferenceEquals(this, other__))
            {
                return true;
            }
            if(other__ == null)
            {
                return false;
            }
            if(GetType() != other__.GetType())
            {
                return false;
            }
            TimeTableEntry o__ = (TimeTableEntry)other__;
            if(!id.Equals(o__.id))
            {
                return false;
            }
            if(dayWeek == null)
            {
                if(o__.dayWeek != null)
                {
                    return false;
                }
            }
            else
            {
                if(!dayWeek.Equals(o__.dayWeek))
                {
                    return false;
                }
            }
            if(!time.Equals(o__.time))
            {
                return false;
            }
            if(group == null)
            {
                if(o__.group != null)
                {
                    return false;
                }
            }
            else
            {
                if(!group.Equals(o__.group))
                {
                    return false;
                }
            }
            return true;
        }

        #endregion

        #region Comparison members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public static bool operator==(TimeTableEntry lhs__, TimeTableEntry rhs__)
        {
            return Equals(lhs__, rhs__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public static bool operator!=(TimeTableEntry lhs__, TimeTableEntry rhs__)
        {
            return !Equals(lhs__, rhs__);
        }

        #endregion

        #region Marshalling support

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public void write__(IceInternal.BasicStream os__)
        {
            os__.writeInt(id);
            os__.writeString(dayWeek);
            os__.writeLong(time);
            Bellamira.Group.write__(os__, group);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public void read__(IceInternal.BasicStream is__)
        {
            id = is__.readInt();
            dayWeek = is__.readString();
            time = is__.readLong();
            group = Bellamira.Group.read__(is__, group);
        }
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public static void write__(IceInternal.BasicStream os__, TimeTableEntry v__)
        {
            if(v__ == null)
            {
                nullMarshalValue__.write__(os__);
            }
            else
            {
                v__.write__(os__);
            }
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public static TimeTableEntry read__(IceInternal.BasicStream is__, TimeTableEntry v__)
        {
            if(v__ == null)
            {
                v__ = new TimeTableEntry();
            }
            v__.read__(is__);
            return v__;
        }
        
        private static readonly TimeTableEntry nullMarshalValue__ = new TimeTableEntry();

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial interface Entry : Ice.Object, EntryOperations_, EntryOperationsNC_
    {
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial interface Session : Ice.Object, SessionOperations_, SessionOperationsNC_
    {
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial interface UserManager : Ice.Object, UserManagerOperations_, UserManagerOperationsNC_
    {
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial interface GroupManager : Ice.Object, GroupManagerOperations_, GroupManagerOperationsNC_
    {
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial interface TimeTableManager : Ice.Object, TimeTableManagerOperations_, TimeTableManagerOperationsNC_
    {
    }
}

namespace Bellamira
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public delegate void Callback_Entry_login(Bellamira.SessionPrx ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public delegate void Callback_Entry_Test(string ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public delegate void Callback_Entry_Register(Bellamira.SessionPrx ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public delegate void Callback_Session_getUserManager(Bellamira.UserManagerPrx ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public delegate void Callback_Session_getGroupManager(Bellamira.GroupManagerPrx ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public delegate void Callback_Session_getTimeTableManager(Bellamira.TimeTableManagerPrx ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public delegate void Callback_UserManager_getAllUsers(Bellamira.User[] ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public delegate void Callback_UserManager_getUser(Bellamira.User ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public delegate void Callback_UserManager_addUser(bool ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public delegate void Callback_UserManager_delUser(bool ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public delegate void Callback_UserManager_modifyUser(bool ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public delegate void Callback_UserManager_getAllUserTypes(Bellamira.UserType[] ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public delegate void Callback_UserManager_getUserType(Bellamira.UserType ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public delegate void Callback_UserManager_addUserType(bool ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public delegate void Callback_UserManager_delUserType(bool ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public delegate void Callback_UserManager_modifyUserType(bool ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public delegate void Callback_GroupManager_getAllGroups(Bellamira.Group[] ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public delegate void Callback_GroupManager_getGroup(Bellamira.Group ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public delegate void Callback_GroupManager_getGroupbyName(Bellamira.Group ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public delegate void Callback_GroupManager_addGroup(bool ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public delegate void Callback_GroupManager_delGroup(bool ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public delegate void Callback_GroupManager_modifyGroup(bool ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public delegate void Callback_GroupManager_addUserInGroup(bool ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public delegate void Callback_GroupManager_delUserFromGroup(bool ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public delegate void Callback_TimeTableManager_getAllTimeTable(Bellamira.TimeTableEntry[] ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public delegate void Callback_TimeTableManager_getTimeTableForGroup(Bellamira.TimeTableEntry[] ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public delegate void Callback_TimeTableManager_addTimeTableEntry(bool ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public delegate void Callback_TimeTableManager_delTimeTableEntry(bool ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public delegate void Callback_TimeTableManager_modifyTimeTableEntry(bool ret__);
}

namespace Bellamira
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public interface UserPrx : Ice.ObjectPrx
    {
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public interface EntryPrx : Ice.ObjectPrx
    {
        Bellamira.SessionPrx login(string name, string password);
        Bellamira.SessionPrx login(string name, string password, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Bellamira.Callback_Entry_login> begin_login(string name, string password);
        Ice.AsyncResult<Bellamira.Callback_Entry_login> begin_login(string name, string password, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_login(string name, string password, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_login(string name, string password, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        Bellamira.SessionPrx end_login(Ice.AsyncResult r__);

        string Test();
        string Test(_System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Bellamira.Callback_Entry_Test> begin_Test();
        Ice.AsyncResult<Bellamira.Callback_Entry_Test> begin_Test(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_Test(Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_Test(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        string end_Test(Ice.AsyncResult r__);

        Bellamira.SessionPrx Register(Bellamira.User user);
        Bellamira.SessionPrx Register(Bellamira.User user, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Bellamira.Callback_Entry_Register> begin_Register(Bellamira.User user);
        Ice.AsyncResult<Bellamira.Callback_Entry_Register> begin_Register(Bellamira.User user, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_Register(Bellamira.User user, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_Register(Bellamira.User user, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        Bellamira.SessionPrx end_Register(Ice.AsyncResult r__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public interface SessionPrx : Ice.ObjectPrx
    {
        Bellamira.UserManagerPrx getUserManager();
        Bellamira.UserManagerPrx getUserManager(_System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Bellamira.Callback_Session_getUserManager> begin_getUserManager();
        Ice.AsyncResult<Bellamira.Callback_Session_getUserManager> begin_getUserManager(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_getUserManager(Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_getUserManager(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        Bellamira.UserManagerPrx end_getUserManager(Ice.AsyncResult r__);

        Bellamira.GroupManagerPrx getGroupManager();
        Bellamira.GroupManagerPrx getGroupManager(_System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Bellamira.Callback_Session_getGroupManager> begin_getGroupManager();
        Ice.AsyncResult<Bellamira.Callback_Session_getGroupManager> begin_getGroupManager(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_getGroupManager(Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_getGroupManager(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        Bellamira.GroupManagerPrx end_getGroupManager(Ice.AsyncResult r__);

        Bellamira.TimeTableManagerPrx getTimeTableManager();
        Bellamira.TimeTableManagerPrx getTimeTableManager(_System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Bellamira.Callback_Session_getTimeTableManager> begin_getTimeTableManager();
        Ice.AsyncResult<Bellamira.Callback_Session_getTimeTableManager> begin_getTimeTableManager(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_getTimeTableManager(Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_getTimeTableManager(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        Bellamira.TimeTableManagerPrx end_getTimeTableManager(Ice.AsyncResult r__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public interface UserManagerPrx : Ice.ObjectPrx
    {
        Bellamira.User[] getAllUsers();
        Bellamira.User[] getAllUsers(_System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Bellamira.Callback_UserManager_getAllUsers> begin_getAllUsers();
        Ice.AsyncResult<Bellamira.Callback_UserManager_getAllUsers> begin_getAllUsers(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_getAllUsers(Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_getAllUsers(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        Bellamira.User[] end_getAllUsers(Ice.AsyncResult r__);

        Bellamira.User getUser(string login);
        Bellamira.User getUser(string login, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Bellamira.Callback_UserManager_getUser> begin_getUser(string login);
        Ice.AsyncResult<Bellamira.Callback_UserManager_getUser> begin_getUser(string login, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_getUser(string login, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_getUser(string login, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        Bellamira.User end_getUser(Ice.AsyncResult r__);

        bool addUser(Bellamira.User u);
        bool addUser(Bellamira.User u, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Bellamira.Callback_UserManager_addUser> begin_addUser(Bellamira.User u);
        Ice.AsyncResult<Bellamira.Callback_UserManager_addUser> begin_addUser(Bellamira.User u, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_addUser(Bellamira.User u, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_addUser(Bellamira.User u, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        bool end_addUser(Ice.AsyncResult r__);

        bool delUser(string login);
        bool delUser(string login, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Bellamira.Callback_UserManager_delUser> begin_delUser(string login);
        Ice.AsyncResult<Bellamira.Callback_UserManager_delUser> begin_delUser(string login, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_delUser(string login, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_delUser(string login, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        bool end_delUser(Ice.AsyncResult r__);

        bool modifyUser(Bellamira.User u, string login);
        bool modifyUser(Bellamira.User u, string login, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Bellamira.Callback_UserManager_modifyUser> begin_modifyUser(Bellamira.User u, string login);
        Ice.AsyncResult<Bellamira.Callback_UserManager_modifyUser> begin_modifyUser(Bellamira.User u, string login, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_modifyUser(Bellamira.User u, string login, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_modifyUser(Bellamira.User u, string login, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        bool end_modifyUser(Ice.AsyncResult r__);

        Bellamira.UserType[] getAllUserTypes();
        Bellamira.UserType[] getAllUserTypes(_System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Bellamira.Callback_UserManager_getAllUserTypes> begin_getAllUserTypes();
        Ice.AsyncResult<Bellamira.Callback_UserManager_getAllUserTypes> begin_getAllUserTypes(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_getAllUserTypes(Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_getAllUserTypes(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        Bellamira.UserType[] end_getAllUserTypes(Ice.AsyncResult r__);

        Bellamira.UserType getUserType(string nameType);
        Bellamira.UserType getUserType(string nameType, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Bellamira.Callback_UserManager_getUserType> begin_getUserType(string nameType);
        Ice.AsyncResult<Bellamira.Callback_UserManager_getUserType> begin_getUserType(string nameType, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_getUserType(string nameType, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_getUserType(string nameType, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        Bellamira.UserType end_getUserType(Ice.AsyncResult r__);

        bool addUserType(Bellamira.UserType ut);
        bool addUserType(Bellamira.UserType ut, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Bellamira.Callback_UserManager_addUserType> begin_addUserType(Bellamira.UserType ut);
        Ice.AsyncResult<Bellamira.Callback_UserManager_addUserType> begin_addUserType(Bellamira.UserType ut, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_addUserType(Bellamira.UserType ut, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_addUserType(Bellamira.UserType ut, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        bool end_addUserType(Ice.AsyncResult r__);

        bool delUserType(string login);
        bool delUserType(string login, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Bellamira.Callback_UserManager_delUserType> begin_delUserType(string login);
        Ice.AsyncResult<Bellamira.Callback_UserManager_delUserType> begin_delUserType(string login, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_delUserType(string login, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_delUserType(string login, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        bool end_delUserType(Ice.AsyncResult r__);

        bool modifyUserType(Bellamira.UserType ut, string login);
        bool modifyUserType(Bellamira.UserType ut, string login, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Bellamira.Callback_UserManager_modifyUserType> begin_modifyUserType(Bellamira.UserType ut, string login);
        Ice.AsyncResult<Bellamira.Callback_UserManager_modifyUserType> begin_modifyUserType(Bellamira.UserType ut, string login, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_modifyUserType(Bellamira.UserType ut, string login, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_modifyUserType(Bellamira.UserType ut, string login, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        bool end_modifyUserType(Ice.AsyncResult r__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public interface GroupManagerPrx : Ice.ObjectPrx
    {
        Bellamira.Group[] getAllGroups();
        Bellamira.Group[] getAllGroups(_System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Bellamira.Callback_GroupManager_getAllGroups> begin_getAllGroups();
        Ice.AsyncResult<Bellamira.Callback_GroupManager_getAllGroups> begin_getAllGroups(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_getAllGroups(Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_getAllGroups(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        Bellamira.Group[] end_getAllGroups(Ice.AsyncResult r__);

        Bellamira.Group getGroup(int idGr);
        Bellamira.Group getGroup(int idGr, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Bellamira.Callback_GroupManager_getGroup> begin_getGroup(int idGr);
        Ice.AsyncResult<Bellamira.Callback_GroupManager_getGroup> begin_getGroup(int idGr, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_getGroup(int idGr, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_getGroup(int idGr, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        Bellamira.Group end_getGroup(Ice.AsyncResult r__);

        Bellamira.Group getGroupbyName(string nameGroup);
        Bellamira.Group getGroupbyName(string nameGroup, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Bellamira.Callback_GroupManager_getGroupbyName> begin_getGroupbyName(string nameGroup);
        Ice.AsyncResult<Bellamira.Callback_GroupManager_getGroupbyName> begin_getGroupbyName(string nameGroup, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_getGroupbyName(string nameGroup, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_getGroupbyName(string nameGroup, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        Bellamira.Group end_getGroupbyName(Ice.AsyncResult r__);

        bool addGroup(Bellamira.Group gp);
        bool addGroup(Bellamira.Group gp, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Bellamira.Callback_GroupManager_addGroup> begin_addGroup(Bellamira.Group gp);
        Ice.AsyncResult<Bellamira.Callback_GroupManager_addGroup> begin_addGroup(Bellamira.Group gp, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_addGroup(Bellamira.Group gp, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_addGroup(Bellamira.Group gp, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        bool end_addGroup(Ice.AsyncResult r__);

        bool delGroup(int idGr);
        bool delGroup(int idGr, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Bellamira.Callback_GroupManager_delGroup> begin_delGroup(int idGr);
        Ice.AsyncResult<Bellamira.Callback_GroupManager_delGroup> begin_delGroup(int idGr, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_delGroup(int idGr, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_delGroup(int idGr, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        bool end_delGroup(Ice.AsyncResult r__);

        bool modifyGroup(Bellamira.Group gp, int idGr);
        bool modifyGroup(Bellamira.Group gp, int idGr, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Bellamira.Callback_GroupManager_modifyGroup> begin_modifyGroup(Bellamira.Group gp, int idGr);
        Ice.AsyncResult<Bellamira.Callback_GroupManager_modifyGroup> begin_modifyGroup(Bellamira.Group gp, int idGr, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_modifyGroup(Bellamira.Group gp, int idGr, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_modifyGroup(Bellamira.Group gp, int idGr, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        bool end_modifyGroup(Ice.AsyncResult r__);

        bool addUserInGroup(Bellamira.User u, int idGr);
        bool addUserInGroup(Bellamira.User u, int idGr, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Bellamira.Callback_GroupManager_addUserInGroup> begin_addUserInGroup(Bellamira.User u, int idGr);
        Ice.AsyncResult<Bellamira.Callback_GroupManager_addUserInGroup> begin_addUserInGroup(Bellamira.User u, int idGr, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_addUserInGroup(Bellamira.User u, int idGr, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_addUserInGroup(Bellamira.User u, int idGr, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        bool end_addUserInGroup(Ice.AsyncResult r__);

        bool delUserFromGroup(Bellamira.User u, int idGr);
        bool delUserFromGroup(Bellamira.User u, int idGr, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Bellamira.Callback_GroupManager_delUserFromGroup> begin_delUserFromGroup(Bellamira.User u, int idGr);
        Ice.AsyncResult<Bellamira.Callback_GroupManager_delUserFromGroup> begin_delUserFromGroup(Bellamira.User u, int idGr, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_delUserFromGroup(Bellamira.User u, int idGr, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_delUserFromGroup(Bellamira.User u, int idGr, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        bool end_delUserFromGroup(Ice.AsyncResult r__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public interface TimeTableManagerPrx : Ice.ObjectPrx
    {
        Bellamira.TimeTableEntry[] getAllTimeTable();
        Bellamira.TimeTableEntry[] getAllTimeTable(_System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Bellamira.Callback_TimeTableManager_getAllTimeTable> begin_getAllTimeTable();
        Ice.AsyncResult<Bellamira.Callback_TimeTableManager_getAllTimeTable> begin_getAllTimeTable(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_getAllTimeTable(Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_getAllTimeTable(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        Bellamira.TimeTableEntry[] end_getAllTimeTable(Ice.AsyncResult r__);

        Bellamira.TimeTableEntry[] getTimeTableForGroup(Bellamira.Group gp);
        Bellamira.TimeTableEntry[] getTimeTableForGroup(Bellamira.Group gp, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Bellamira.Callback_TimeTableManager_getTimeTableForGroup> begin_getTimeTableForGroup(Bellamira.Group gp);
        Ice.AsyncResult<Bellamira.Callback_TimeTableManager_getTimeTableForGroup> begin_getTimeTableForGroup(Bellamira.Group gp, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_getTimeTableForGroup(Bellamira.Group gp, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_getTimeTableForGroup(Bellamira.Group gp, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        Bellamira.TimeTableEntry[] end_getTimeTableForGroup(Ice.AsyncResult r__);

        bool addTimeTableEntry(Bellamira.TimeTableEntry te);
        bool addTimeTableEntry(Bellamira.TimeTableEntry te, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Bellamira.Callback_TimeTableManager_addTimeTableEntry> begin_addTimeTableEntry(Bellamira.TimeTableEntry te);
        Ice.AsyncResult<Bellamira.Callback_TimeTableManager_addTimeTableEntry> begin_addTimeTableEntry(Bellamira.TimeTableEntry te, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_addTimeTableEntry(Bellamira.TimeTableEntry te, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_addTimeTableEntry(Bellamira.TimeTableEntry te, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        bool end_addTimeTableEntry(Ice.AsyncResult r__);

        bool delTimeTableEntry(int id);
        bool delTimeTableEntry(int id, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Bellamira.Callback_TimeTableManager_delTimeTableEntry> begin_delTimeTableEntry(int id);
        Ice.AsyncResult<Bellamira.Callback_TimeTableManager_delTimeTableEntry> begin_delTimeTableEntry(int id, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_delTimeTableEntry(int id, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_delTimeTableEntry(int id, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        bool end_delTimeTableEntry(Ice.AsyncResult r__);

        bool modifyTimeTableEntry(Bellamira.TimeTableEntry te, int id);
        bool modifyTimeTableEntry(Bellamira.TimeTableEntry te, int id, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Bellamira.Callback_TimeTableManager_modifyTimeTableEntry> begin_modifyTimeTableEntry(Bellamira.TimeTableEntry te, int id);
        Ice.AsyncResult<Bellamira.Callback_TimeTableManager_modifyTimeTableEntry> begin_modifyTimeTableEntry(Bellamira.TimeTableEntry te, int id, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_modifyTimeTableEntry(Bellamira.TimeTableEntry te, int id, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_modifyTimeTableEntry(Bellamira.TimeTableEntry te, int id, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        bool end_modifyTimeTableEntry(Ice.AsyncResult r__);
    }
}

namespace Bellamira
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public interface EntryOperations_
    {
        Bellamira.SessionPrx login(string name, string password, Ice.Current current__);

        string Test(Ice.Current current__);

        Bellamira.SessionPrx Register(Bellamira.User user, Ice.Current current__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public interface EntryOperationsNC_
    {
        Bellamira.SessionPrx login(string name, string password);

        string Test();

        Bellamira.SessionPrx Register(Bellamira.User user);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public interface SessionOperations_
    {
        Bellamira.UserManagerPrx getUserManager(Ice.Current current__);

        Bellamira.GroupManagerPrx getGroupManager(Ice.Current current__);

        Bellamira.TimeTableManagerPrx getTimeTableManager(Ice.Current current__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public interface SessionOperationsNC_
    {
        Bellamira.UserManagerPrx getUserManager();

        Bellamira.GroupManagerPrx getGroupManager();

        Bellamira.TimeTableManagerPrx getTimeTableManager();
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public interface UserManagerOperations_
    {
        Bellamira.User[] getAllUsers(Ice.Current current__);

        Bellamira.User getUser(string login, Ice.Current current__);

        bool addUser(Bellamira.User u, Ice.Current current__);

        bool delUser(string login, Ice.Current current__);

        bool modifyUser(Bellamira.User u, string login, Ice.Current current__);

        Bellamira.UserType[] getAllUserTypes(Ice.Current current__);

        Bellamira.UserType getUserType(string nameType, Ice.Current current__);

        bool addUserType(Bellamira.UserType ut, Ice.Current current__);

        bool delUserType(string login, Ice.Current current__);

        bool modifyUserType(Bellamira.UserType ut, string login, Ice.Current current__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public interface UserManagerOperationsNC_
    {
        Bellamira.User[] getAllUsers();

        Bellamira.User getUser(string login);

        bool addUser(Bellamira.User u);

        bool delUser(string login);

        bool modifyUser(Bellamira.User u, string login);

        Bellamira.UserType[] getAllUserTypes();

        Bellamira.UserType getUserType(string nameType);

        bool addUserType(Bellamira.UserType ut);

        bool delUserType(string login);

        bool modifyUserType(Bellamira.UserType ut, string login);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public interface GroupManagerOperations_
    {
        Bellamira.Group[] getAllGroups(Ice.Current current__);

        Bellamira.Group getGroup(int idGr, Ice.Current current__);

        Bellamira.Group getGroupbyName(string nameGroup, Ice.Current current__);

        bool addGroup(Bellamira.Group gp, Ice.Current current__);

        bool delGroup(int idGr, Ice.Current current__);

        bool modifyGroup(Bellamira.Group gp, int idGr, Ice.Current current__);

        bool addUserInGroup(Bellamira.User u, int idGr, Ice.Current current__);

        bool delUserFromGroup(Bellamira.User u, int idGr, Ice.Current current__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public interface GroupManagerOperationsNC_
    {
        Bellamira.Group[] getAllGroups();

        Bellamira.Group getGroup(int idGr);

        Bellamira.Group getGroupbyName(string nameGroup);

        bool addGroup(Bellamira.Group gp);

        bool delGroup(int idGr);

        bool modifyGroup(Bellamira.Group gp, int idGr);

        bool addUserInGroup(Bellamira.User u, int idGr);

        bool delUserFromGroup(Bellamira.User u, int idGr);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public interface TimeTableManagerOperations_
    {
        Bellamira.TimeTableEntry[] getAllTimeTable(Ice.Current current__);

        Bellamira.TimeTableEntry[] getTimeTableForGroup(Bellamira.Group gp, Ice.Current current__);

        bool addTimeTableEntry(Bellamira.TimeTableEntry te, Ice.Current current__);

        bool delTimeTableEntry(int id, Ice.Current current__);

        bool modifyTimeTableEntry(Bellamira.TimeTableEntry te, int id, Ice.Current current__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public interface TimeTableManagerOperationsNC_
    {
        Bellamira.TimeTableEntry[] getAllTimeTable();

        Bellamira.TimeTableEntry[] getTimeTableForGroup(Bellamira.Group gp);

        bool addTimeTableEntry(Bellamira.TimeTableEntry te);

        bool delTimeTableEntry(int id);

        bool modifyTimeTableEntry(Bellamira.TimeTableEntry te, int id);
    }
}

namespace Bellamira
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public sealed class UserPrxHelper : Ice.ObjectPrxHelperBase, UserPrx
    {
        #region Asynchronous operations

        #endregion

        #region Checked and unchecked cast operations

        public static UserPrx checkedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            UserPrx r = b as UserPrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                UserPrxHelper h = new UserPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static UserPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            UserPrx r = b as UserPrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                UserPrxHelper h = new UserPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static UserPrx checkedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    UserPrxHelper h = new UserPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static UserPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    UserPrxHelper h = new UserPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static UserPrx uncheckedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            UserPrx r = b as UserPrx;
            if(r == null)
            {
                UserPrxHelper h = new UserPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static UserPrx uncheckedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            UserPrxHelper h = new UserPrxHelper();
            h.copyFrom__(bb);
            return h;
        }

        public static readonly string[] ids__ =
        {
            "::Bellamira::User",
            "::Ice::Object"
        };

        public static string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Marshaling support

        public static void write__(IceInternal.BasicStream os__, UserPrx v__)
        {
            os__.writeProxy(v__);
        }

        public static UserPrx read__(IceInternal.BasicStream is__)
        {
            Ice.ObjectPrx proxy = is__.readProxy();
            if(proxy != null)
            {
                UserPrxHelper result = new UserPrxHelper();
                result.copyFrom__(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public sealed class usersHelper
    {
        public static void write(IceInternal.BasicStream os__, Bellamira.User[] v__)
        {
            if(v__ == null)
            {
                os__.writeSize(0);
            }
            else
            {
                os__.writeSize(v__.Length);
                for(int ix__ = 0; ix__ < v__.Length; ++ix__)
                {
                    os__.writeObject(v__[ix__]);
                }
            }
        }

        public static Bellamira.User[] read(IceInternal.BasicStream is__)
        {
            Bellamira.User[] v__;
            {
                int szx__ = is__.readAndCheckSeqSize(1);
                v__ = new Bellamira.User[szx__];
                for(int ix__ = 0; ix__ < szx__; ++ix__)
                {
                    IceInternal.ArrayPatcher<Bellamira.User> spx = new IceInternal.ArrayPatcher<Bellamira.User>("::Bellamira::User", v__, ix__);
                    is__.readObject(spx);
                }
            }
            return v__;
        }
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public sealed class userTypesHelper
    {
        public static void write(IceInternal.BasicStream os__, Bellamira.UserType[] v__)
        {
            if(v__ == null)
            {
                os__.writeSize(0);
            }
            else
            {
                os__.writeSize(v__.Length);
                for(int ix__ = 0; ix__ < v__.Length; ++ix__)
                {
                    (v__[ix__] == null ? new Bellamira.UserType() : v__[ix__]).write__(os__);
                }
            }
        }

        public static Bellamira.UserType[] read(IceInternal.BasicStream is__)
        {
            Bellamira.UserType[] v__;
            {
                int szx__ = is__.readAndCheckSeqSize(5);
                v__ = new Bellamira.UserType[szx__];
                for(int ix__ = 0; ix__ < szx__; ++ix__)
                {
                    v__[ix__] = new Bellamira.UserType();
                    v__[ix__].read__(is__);
                }
            }
            return v__;
        }
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public sealed class groupsHelper
    {
        public static void write(IceInternal.BasicStream os__, Bellamira.Group[] v__)
        {
            if(v__ == null)
            {
                os__.writeSize(0);
            }
            else
            {
                os__.writeSize(v__.Length);
                for(int ix__ = 0; ix__ < v__.Length; ++ix__)
                {
                    (v__[ix__] == null ? new Bellamira.Group() : v__[ix__]).write__(os__);
                }
            }
        }

        public static Bellamira.Group[] read(IceInternal.BasicStream is__)
        {
            Bellamira.Group[] v__;
            {
                int szx__ = is__.readAndCheckSeqSize(7);
                v__ = new Bellamira.Group[szx__];
                for(int ix__ = 0; ix__ < szx__; ++ix__)
                {
                    v__[ix__] = new Bellamira.Group();
                    v__[ix__].read__(is__);
                }
            }
            return v__;
        }
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public sealed class timeTableHelper
    {
        public static void write(IceInternal.BasicStream os__, Bellamira.TimeTableEntry[] v__)
        {
            if(v__ == null)
            {
                os__.writeSize(0);
            }
            else
            {
                os__.writeSize(v__.Length);
                for(int ix__ = 0; ix__ < v__.Length; ++ix__)
                {
                    (v__[ix__] == null ? new Bellamira.TimeTableEntry() : v__[ix__]).write__(os__);
                }
            }
        }

        public static Bellamira.TimeTableEntry[] read(IceInternal.BasicStream is__)
        {
            Bellamira.TimeTableEntry[] v__;
            {
                int szx__ = is__.readAndCheckSeqSize(20);
                v__ = new Bellamira.TimeTableEntry[szx__];
                for(int ix__ = 0; ix__ < szx__; ++ix__)
                {
                    v__[ix__] = new Bellamira.TimeTableEntry();
                    v__[ix__].read__(is__);
                }
            }
            return v__;
        }
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public sealed class EntryPrxHelper : Ice.ObjectPrxHelperBase, EntryPrx
    {
        #region Synchronous operations

        public Bellamira.SessionPrx Register(Bellamira.User user)
        {
            return this.Register(user, null, false);
        }

        public Bellamira.SessionPrx Register(Bellamira.User user, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return this.Register(user, context__, true);
        }

        private Bellamira.SessionPrx Register(Bellamira.User user, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__Register_name);
            return end_Register(begin_Register(user, context__, explicitCtx__, true, null, null));
        }

        public string Test()
        {
            return this.Test(null, false);
        }

        public string Test(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            return this.Test(context__, true);
        }

        private string Test(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__Test_name);
            return end_Test(begin_Test(context__, explicitCtx__, true, null, null));
        }

        public Bellamira.SessionPrx login(string name, string password)
        {
            return this.login(name, password, null, false);
        }

        public Bellamira.SessionPrx login(string name, string password, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return this.login(name, password, context__, true);
        }

        private Bellamira.SessionPrx login(string name, string password, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__login_name);
            return end_login(begin_login(name, password, context__, explicitCtx__, true, null, null));
        }

        #endregion

        #region Asynchronous operations

        public Ice.AsyncResult<Bellamira.Callback_Entry_Register> begin_Register(Bellamira.User user)
        {
            return begin_Register(user, null, false, false, null, null);
        }

        public Ice.AsyncResult<Bellamira.Callback_Entry_Register> begin_Register(Bellamira.User user, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_Register(user, ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_Register(Bellamira.User user, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_Register(user, null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_Register(Bellamira.User user, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_Register(user, ctx__, true, false, cb__, cookie__);
        }

        private const string __Register_name = "Register";

        public Bellamira.SessionPrx end_Register(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __Register_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                Bellamira.SessionPrx ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                ret__ = Bellamira.SessionPrxHelper.read__(is__);
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<Bellamira.Callback_Entry_Register> begin_Register(Bellamira.User user, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__Register_name);
            IceInternal.TwowayOutgoingAsync<Bellamira.Callback_Entry_Register> result__ =  getTwowayOutgoingAsync<Bellamira.Callback_Entry_Register>(__Register_name, Register_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__Register_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                os__.writeObject(user);
                os__.writePendingObjects();
                result__.endWriteParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void Register_completed__(Ice.AsyncResult r__, Bellamira.Callback_Entry_Register cb__, Ice.ExceptionCallback excb__)
        {
            Bellamira.SessionPrx ret__;
            try
            {
                ret__ = end_Register(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<Bellamira.Callback_Entry_Test> begin_Test()
        {
            return begin_Test(null, false, false, null, null);
        }

        public Ice.AsyncResult<Bellamira.Callback_Entry_Test> begin_Test(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_Test(ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_Test(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_Test(null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_Test(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_Test(ctx__, true, false, cb__, cookie__);
        }

        private const string __Test_name = "Test";

        public string end_Test(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __Test_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                string ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                ret__ = is__.readString();
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<Bellamira.Callback_Entry_Test> begin_Test(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__Test_name);
            IceInternal.TwowayOutgoingAsync<Bellamira.Callback_Entry_Test> result__ =  getTwowayOutgoingAsync<Bellamira.Callback_Entry_Test>(__Test_name, Test_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__Test_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                result__.writeEmptyParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void Test_completed__(Ice.AsyncResult r__, Bellamira.Callback_Entry_Test cb__, Ice.ExceptionCallback excb__)
        {
            string ret__;
            try
            {
                ret__ = end_Test(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<Bellamira.Callback_Entry_login> begin_login(string name, string password)
        {
            return begin_login(name, password, null, false, false, null, null);
        }

        public Ice.AsyncResult<Bellamira.Callback_Entry_login> begin_login(string name, string password, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_login(name, password, ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_login(string name, string password, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_login(name, password, null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_login(string name, string password, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_login(name, password, ctx__, true, false, cb__, cookie__);
        }

        private const string __login_name = "login";

        public Bellamira.SessionPrx end_login(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __login_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                Bellamira.SessionPrx ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                ret__ = Bellamira.SessionPrxHelper.read__(is__);
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<Bellamira.Callback_Entry_login> begin_login(string name, string password, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__login_name);
            IceInternal.TwowayOutgoingAsync<Bellamira.Callback_Entry_login> result__ =  getTwowayOutgoingAsync<Bellamira.Callback_Entry_login>(__login_name, login_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__login_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                os__.writeString(name);
                os__.writeString(password);
                result__.endWriteParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void login_completed__(Ice.AsyncResult r__, Bellamira.Callback_Entry_login cb__, Ice.ExceptionCallback excb__)
        {
            Bellamira.SessionPrx ret__;
            try
            {
                ret__ = end_login(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        #endregion

        #region Checked and unchecked cast operations

        public static EntryPrx checkedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            EntryPrx r = b as EntryPrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                EntryPrxHelper h = new EntryPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static EntryPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            EntryPrx r = b as EntryPrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                EntryPrxHelper h = new EntryPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static EntryPrx checkedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    EntryPrxHelper h = new EntryPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static EntryPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    EntryPrxHelper h = new EntryPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static EntryPrx uncheckedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            EntryPrx r = b as EntryPrx;
            if(r == null)
            {
                EntryPrxHelper h = new EntryPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static EntryPrx uncheckedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            EntryPrxHelper h = new EntryPrxHelper();
            h.copyFrom__(bb);
            return h;
        }

        public static readonly string[] ids__ =
        {
            "::Bellamira::Entry",
            "::Ice::Object"
        };

        public static string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Marshaling support

        public static void write__(IceInternal.BasicStream os__, EntryPrx v__)
        {
            os__.writeProxy(v__);
        }

        public static EntryPrx read__(IceInternal.BasicStream is__)
        {
            Ice.ObjectPrx proxy = is__.readProxy();
            if(proxy != null)
            {
                EntryPrxHelper result = new EntryPrxHelper();
                result.copyFrom__(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public sealed class SessionPrxHelper : Ice.ObjectPrxHelperBase, SessionPrx
    {
        #region Synchronous operations

        public Bellamira.GroupManagerPrx getGroupManager()
        {
            return this.getGroupManager(null, false);
        }

        public Bellamira.GroupManagerPrx getGroupManager(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            return this.getGroupManager(context__, true);
        }

        private Bellamira.GroupManagerPrx getGroupManager(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__getGroupManager_name);
            return end_getGroupManager(begin_getGroupManager(context__, explicitCtx__, true, null, null));
        }

        public Bellamira.TimeTableManagerPrx getTimeTableManager()
        {
            return this.getTimeTableManager(null, false);
        }

        public Bellamira.TimeTableManagerPrx getTimeTableManager(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            return this.getTimeTableManager(context__, true);
        }

        private Bellamira.TimeTableManagerPrx getTimeTableManager(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__getTimeTableManager_name);
            return end_getTimeTableManager(begin_getTimeTableManager(context__, explicitCtx__, true, null, null));
        }

        public Bellamira.UserManagerPrx getUserManager()
        {
            return this.getUserManager(null, false);
        }

        public Bellamira.UserManagerPrx getUserManager(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            return this.getUserManager(context__, true);
        }

        private Bellamira.UserManagerPrx getUserManager(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__getUserManager_name);
            return end_getUserManager(begin_getUserManager(context__, explicitCtx__, true, null, null));
        }

        #endregion

        #region Asynchronous operations

        public Ice.AsyncResult<Bellamira.Callback_Session_getGroupManager> begin_getGroupManager()
        {
            return begin_getGroupManager(null, false, false, null, null);
        }

        public Ice.AsyncResult<Bellamira.Callback_Session_getGroupManager> begin_getGroupManager(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_getGroupManager(ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_getGroupManager(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getGroupManager(null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_getGroupManager(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getGroupManager(ctx__, true, false, cb__, cookie__);
        }

        private const string __getGroupManager_name = "getGroupManager";

        public Bellamira.GroupManagerPrx end_getGroupManager(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __getGroupManager_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                Bellamira.GroupManagerPrx ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                ret__ = Bellamira.GroupManagerPrxHelper.read__(is__);
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<Bellamira.Callback_Session_getGroupManager> begin_getGroupManager(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__getGroupManager_name);
            IceInternal.TwowayOutgoingAsync<Bellamira.Callback_Session_getGroupManager> result__ =  getTwowayOutgoingAsync<Bellamira.Callback_Session_getGroupManager>(__getGroupManager_name, getGroupManager_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__getGroupManager_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                result__.writeEmptyParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void getGroupManager_completed__(Ice.AsyncResult r__, Bellamira.Callback_Session_getGroupManager cb__, Ice.ExceptionCallback excb__)
        {
            Bellamira.GroupManagerPrx ret__;
            try
            {
                ret__ = end_getGroupManager(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<Bellamira.Callback_Session_getTimeTableManager> begin_getTimeTableManager()
        {
            return begin_getTimeTableManager(null, false, false, null, null);
        }

        public Ice.AsyncResult<Bellamira.Callback_Session_getTimeTableManager> begin_getTimeTableManager(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_getTimeTableManager(ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_getTimeTableManager(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getTimeTableManager(null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_getTimeTableManager(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getTimeTableManager(ctx__, true, false, cb__, cookie__);
        }

        private const string __getTimeTableManager_name = "getTimeTableManager";

        public Bellamira.TimeTableManagerPrx end_getTimeTableManager(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __getTimeTableManager_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                Bellamira.TimeTableManagerPrx ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                ret__ = Bellamira.TimeTableManagerPrxHelper.read__(is__);
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<Bellamira.Callback_Session_getTimeTableManager> begin_getTimeTableManager(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__getTimeTableManager_name);
            IceInternal.TwowayOutgoingAsync<Bellamira.Callback_Session_getTimeTableManager> result__ =  getTwowayOutgoingAsync<Bellamira.Callback_Session_getTimeTableManager>(__getTimeTableManager_name, getTimeTableManager_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__getTimeTableManager_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                result__.writeEmptyParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void getTimeTableManager_completed__(Ice.AsyncResult r__, Bellamira.Callback_Session_getTimeTableManager cb__, Ice.ExceptionCallback excb__)
        {
            Bellamira.TimeTableManagerPrx ret__;
            try
            {
                ret__ = end_getTimeTableManager(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<Bellamira.Callback_Session_getUserManager> begin_getUserManager()
        {
            return begin_getUserManager(null, false, false, null, null);
        }

        public Ice.AsyncResult<Bellamira.Callback_Session_getUserManager> begin_getUserManager(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_getUserManager(ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_getUserManager(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getUserManager(null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_getUserManager(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getUserManager(ctx__, true, false, cb__, cookie__);
        }

        private const string __getUserManager_name = "getUserManager";

        public Bellamira.UserManagerPrx end_getUserManager(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __getUserManager_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                Bellamira.UserManagerPrx ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                ret__ = Bellamira.UserManagerPrxHelper.read__(is__);
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<Bellamira.Callback_Session_getUserManager> begin_getUserManager(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__getUserManager_name);
            IceInternal.TwowayOutgoingAsync<Bellamira.Callback_Session_getUserManager> result__ =  getTwowayOutgoingAsync<Bellamira.Callback_Session_getUserManager>(__getUserManager_name, getUserManager_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__getUserManager_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                result__.writeEmptyParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void getUserManager_completed__(Ice.AsyncResult r__, Bellamira.Callback_Session_getUserManager cb__, Ice.ExceptionCallback excb__)
        {
            Bellamira.UserManagerPrx ret__;
            try
            {
                ret__ = end_getUserManager(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        #endregion

        #region Checked and unchecked cast operations

        public static SessionPrx checkedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            SessionPrx r = b as SessionPrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                SessionPrxHelper h = new SessionPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static SessionPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            SessionPrx r = b as SessionPrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                SessionPrxHelper h = new SessionPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static SessionPrx checkedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    SessionPrxHelper h = new SessionPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static SessionPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    SessionPrxHelper h = new SessionPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static SessionPrx uncheckedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            SessionPrx r = b as SessionPrx;
            if(r == null)
            {
                SessionPrxHelper h = new SessionPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static SessionPrx uncheckedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            SessionPrxHelper h = new SessionPrxHelper();
            h.copyFrom__(bb);
            return h;
        }

        public static readonly string[] ids__ =
        {
            "::Bellamira::Session",
            "::Ice::Object"
        };

        public static string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Marshaling support

        public static void write__(IceInternal.BasicStream os__, SessionPrx v__)
        {
            os__.writeProxy(v__);
        }

        public static SessionPrx read__(IceInternal.BasicStream is__)
        {
            Ice.ObjectPrx proxy = is__.readProxy();
            if(proxy != null)
            {
                SessionPrxHelper result = new SessionPrxHelper();
                result.copyFrom__(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public sealed class UserManagerPrxHelper : Ice.ObjectPrxHelperBase, UserManagerPrx
    {
        #region Synchronous operations

        public bool addUser(Bellamira.User u)
        {
            return this.addUser(u, null, false);
        }

        public bool addUser(Bellamira.User u, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return this.addUser(u, context__, true);
        }

        private bool addUser(Bellamira.User u, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__addUser_name);
            return end_addUser(begin_addUser(u, context__, explicitCtx__, true, null, null));
        }

        public bool addUserType(Bellamira.UserType ut)
        {
            return this.addUserType(ut, null, false);
        }

        public bool addUserType(Bellamira.UserType ut, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return this.addUserType(ut, context__, true);
        }

        private bool addUserType(Bellamira.UserType ut, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__addUserType_name);
            return end_addUserType(begin_addUserType(ut, context__, explicitCtx__, true, null, null));
        }

        public bool delUser(string login)
        {
            return this.delUser(login, null, false);
        }

        public bool delUser(string login, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return this.delUser(login, context__, true);
        }

        private bool delUser(string login, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__delUser_name);
            return end_delUser(begin_delUser(login, context__, explicitCtx__, true, null, null));
        }

        public bool delUserType(string login)
        {
            return this.delUserType(login, null, false);
        }

        public bool delUserType(string login, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return this.delUserType(login, context__, true);
        }

        private bool delUserType(string login, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__delUserType_name);
            return end_delUserType(begin_delUserType(login, context__, explicitCtx__, true, null, null));
        }

        public Bellamira.UserType[] getAllUserTypes()
        {
            return this.getAllUserTypes(null, false);
        }

        public Bellamira.UserType[] getAllUserTypes(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            return this.getAllUserTypes(context__, true);
        }

        private Bellamira.UserType[] getAllUserTypes(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__getAllUserTypes_name);
            return end_getAllUserTypes(begin_getAllUserTypes(context__, explicitCtx__, true, null, null));
        }

        public Bellamira.User[] getAllUsers()
        {
            return this.getAllUsers(null, false);
        }

        public Bellamira.User[] getAllUsers(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            return this.getAllUsers(context__, true);
        }

        private Bellamira.User[] getAllUsers(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__getAllUsers_name);
            return end_getAllUsers(begin_getAllUsers(context__, explicitCtx__, true, null, null));
        }

        public Bellamira.User getUser(string login)
        {
            return this.getUser(login, null, false);
        }

        public Bellamira.User getUser(string login, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return this.getUser(login, context__, true);
        }

        private Bellamira.User getUser(string login, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__getUser_name);
            return end_getUser(begin_getUser(login, context__, explicitCtx__, true, null, null));
        }

        public Bellamira.UserType getUserType(string nameType)
        {
            return this.getUserType(nameType, null, false);
        }

        public Bellamira.UserType getUserType(string nameType, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return this.getUserType(nameType, context__, true);
        }

        private Bellamira.UserType getUserType(string nameType, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__getUserType_name);
            return end_getUserType(begin_getUserType(nameType, context__, explicitCtx__, true, null, null));
        }

        public bool modifyUser(Bellamira.User u, string login)
        {
            return this.modifyUser(u, login, null, false);
        }

        public bool modifyUser(Bellamira.User u, string login, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return this.modifyUser(u, login, context__, true);
        }

        private bool modifyUser(Bellamira.User u, string login, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__modifyUser_name);
            return end_modifyUser(begin_modifyUser(u, login, context__, explicitCtx__, true, null, null));
        }

        public bool modifyUserType(Bellamira.UserType ut, string login)
        {
            return this.modifyUserType(ut, login, null, false);
        }

        public bool modifyUserType(Bellamira.UserType ut, string login, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return this.modifyUserType(ut, login, context__, true);
        }

        private bool modifyUserType(Bellamira.UserType ut, string login, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__modifyUserType_name);
            return end_modifyUserType(begin_modifyUserType(ut, login, context__, explicitCtx__, true, null, null));
        }

        #endregion

        #region Asynchronous operations

        public Ice.AsyncResult<Bellamira.Callback_UserManager_addUser> begin_addUser(Bellamira.User u)
        {
            return begin_addUser(u, null, false, false, null, null);
        }

        public Ice.AsyncResult<Bellamira.Callback_UserManager_addUser> begin_addUser(Bellamira.User u, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_addUser(u, ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_addUser(Bellamira.User u, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_addUser(u, null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_addUser(Bellamira.User u, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_addUser(u, ctx__, true, false, cb__, cookie__);
        }

        private const string __addUser_name = "addUser";

        public bool end_addUser(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __addUser_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                bool ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                ret__ = is__.readBool();
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<Bellamira.Callback_UserManager_addUser> begin_addUser(Bellamira.User u, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__addUser_name);
            IceInternal.TwowayOutgoingAsync<Bellamira.Callback_UserManager_addUser> result__ =  getTwowayOutgoingAsync<Bellamira.Callback_UserManager_addUser>(__addUser_name, addUser_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__addUser_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                os__.writeObject(u);
                os__.writePendingObjects();
                result__.endWriteParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void addUser_completed__(Ice.AsyncResult r__, Bellamira.Callback_UserManager_addUser cb__, Ice.ExceptionCallback excb__)
        {
            bool ret__;
            try
            {
                ret__ = end_addUser(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<Bellamira.Callback_UserManager_addUserType> begin_addUserType(Bellamira.UserType ut)
        {
            return begin_addUserType(ut, null, false, false, null, null);
        }

        public Ice.AsyncResult<Bellamira.Callback_UserManager_addUserType> begin_addUserType(Bellamira.UserType ut, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_addUserType(ut, ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_addUserType(Bellamira.UserType ut, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_addUserType(ut, null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_addUserType(Bellamira.UserType ut, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_addUserType(ut, ctx__, true, false, cb__, cookie__);
        }

        private const string __addUserType_name = "addUserType";

        public bool end_addUserType(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __addUserType_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                bool ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                ret__ = is__.readBool();
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<Bellamira.Callback_UserManager_addUserType> begin_addUserType(Bellamira.UserType ut, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__addUserType_name);
            IceInternal.TwowayOutgoingAsync<Bellamira.Callback_UserManager_addUserType> result__ =  getTwowayOutgoingAsync<Bellamira.Callback_UserManager_addUserType>(__addUserType_name, addUserType_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__addUserType_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                Bellamira.UserType.write__(os__, ut);
                result__.endWriteParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void addUserType_completed__(Ice.AsyncResult r__, Bellamira.Callback_UserManager_addUserType cb__, Ice.ExceptionCallback excb__)
        {
            bool ret__;
            try
            {
                ret__ = end_addUserType(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<Bellamira.Callback_UserManager_delUser> begin_delUser(string login)
        {
            return begin_delUser(login, null, false, false, null, null);
        }

        public Ice.AsyncResult<Bellamira.Callback_UserManager_delUser> begin_delUser(string login, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_delUser(login, ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_delUser(string login, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_delUser(login, null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_delUser(string login, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_delUser(login, ctx__, true, false, cb__, cookie__);
        }

        private const string __delUser_name = "delUser";

        public bool end_delUser(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __delUser_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                bool ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                ret__ = is__.readBool();
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<Bellamira.Callback_UserManager_delUser> begin_delUser(string login, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__delUser_name);
            IceInternal.TwowayOutgoingAsync<Bellamira.Callback_UserManager_delUser> result__ =  getTwowayOutgoingAsync<Bellamira.Callback_UserManager_delUser>(__delUser_name, delUser_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__delUser_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                os__.writeString(login);
                result__.endWriteParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void delUser_completed__(Ice.AsyncResult r__, Bellamira.Callback_UserManager_delUser cb__, Ice.ExceptionCallback excb__)
        {
            bool ret__;
            try
            {
                ret__ = end_delUser(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<Bellamira.Callback_UserManager_delUserType> begin_delUserType(string login)
        {
            return begin_delUserType(login, null, false, false, null, null);
        }

        public Ice.AsyncResult<Bellamira.Callback_UserManager_delUserType> begin_delUserType(string login, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_delUserType(login, ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_delUserType(string login, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_delUserType(login, null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_delUserType(string login, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_delUserType(login, ctx__, true, false, cb__, cookie__);
        }

        private const string __delUserType_name = "delUserType";

        public bool end_delUserType(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __delUserType_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                bool ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                ret__ = is__.readBool();
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<Bellamira.Callback_UserManager_delUserType> begin_delUserType(string login, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__delUserType_name);
            IceInternal.TwowayOutgoingAsync<Bellamira.Callback_UserManager_delUserType> result__ =  getTwowayOutgoingAsync<Bellamira.Callback_UserManager_delUserType>(__delUserType_name, delUserType_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__delUserType_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                os__.writeString(login);
                result__.endWriteParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void delUserType_completed__(Ice.AsyncResult r__, Bellamira.Callback_UserManager_delUserType cb__, Ice.ExceptionCallback excb__)
        {
            bool ret__;
            try
            {
                ret__ = end_delUserType(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<Bellamira.Callback_UserManager_getAllUserTypes> begin_getAllUserTypes()
        {
            return begin_getAllUserTypes(null, false, false, null, null);
        }

        public Ice.AsyncResult<Bellamira.Callback_UserManager_getAllUserTypes> begin_getAllUserTypes(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_getAllUserTypes(ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_getAllUserTypes(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getAllUserTypes(null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_getAllUserTypes(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getAllUserTypes(ctx__, true, false, cb__, cookie__);
        }

        private const string __getAllUserTypes_name = "getAllUserTypes";

        public Bellamira.UserType[] end_getAllUserTypes(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __getAllUserTypes_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                Bellamira.UserType[] ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                ret__ = Bellamira.userTypesHelper.read(is__);
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<Bellamira.Callback_UserManager_getAllUserTypes> begin_getAllUserTypes(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__getAllUserTypes_name);
            IceInternal.TwowayOutgoingAsync<Bellamira.Callback_UserManager_getAllUserTypes> result__ =  getTwowayOutgoingAsync<Bellamira.Callback_UserManager_getAllUserTypes>(__getAllUserTypes_name, getAllUserTypes_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__getAllUserTypes_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                result__.writeEmptyParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void getAllUserTypes_completed__(Ice.AsyncResult r__, Bellamira.Callback_UserManager_getAllUserTypes cb__, Ice.ExceptionCallback excb__)
        {
            Bellamira.UserType[] ret__;
            try
            {
                ret__ = end_getAllUserTypes(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<Bellamira.Callback_UserManager_getAllUsers> begin_getAllUsers()
        {
            return begin_getAllUsers(null, false, false, null, null);
        }

        public Ice.AsyncResult<Bellamira.Callback_UserManager_getAllUsers> begin_getAllUsers(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_getAllUsers(ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_getAllUsers(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getAllUsers(null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_getAllUsers(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getAllUsers(ctx__, true, false, cb__, cookie__);
        }

        private const string __getAllUsers_name = "getAllUsers";

        public Bellamira.User[] end_getAllUsers(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __getAllUsers_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                Bellamira.User[] ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                ret__ = Bellamira.usersHelper.read(is__);
                is__.readPendingObjects();
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<Bellamira.Callback_UserManager_getAllUsers> begin_getAllUsers(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__getAllUsers_name);
            IceInternal.TwowayOutgoingAsync<Bellamira.Callback_UserManager_getAllUsers> result__ =  getTwowayOutgoingAsync<Bellamira.Callback_UserManager_getAllUsers>(__getAllUsers_name, getAllUsers_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__getAllUsers_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                result__.writeEmptyParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void getAllUsers_completed__(Ice.AsyncResult r__, Bellamira.Callback_UserManager_getAllUsers cb__, Ice.ExceptionCallback excb__)
        {
            Bellamira.User[] ret__;
            try
            {
                ret__ = end_getAllUsers(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<Bellamira.Callback_UserManager_getUser> begin_getUser(string login)
        {
            return begin_getUser(login, null, false, false, null, null);
        }

        public Ice.AsyncResult<Bellamira.Callback_UserManager_getUser> begin_getUser(string login, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_getUser(login, ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_getUser(string login, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getUser(login, null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_getUser(string login, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getUser(login, ctx__, true, false, cb__, cookie__);
        }

        private const string __getUser_name = "getUser";

        public Bellamira.User end_getUser(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __getUser_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                Bellamira.User ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                IceInternal.ParamPatcher<Bellamira.User> ret__PP = new IceInternal.ParamPatcher<Bellamira.User>(Bellamira.User.ice_staticId());
                is__.readObject(ret__PP);
                is__.readPendingObjects();
                outAsync__.endReadParams();
                ret__ = ret__PP.value;
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<Bellamira.Callback_UserManager_getUser> begin_getUser(string login, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__getUser_name);
            IceInternal.TwowayOutgoingAsync<Bellamira.Callback_UserManager_getUser> result__ =  getTwowayOutgoingAsync<Bellamira.Callback_UserManager_getUser>(__getUser_name, getUser_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__getUser_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                os__.writeString(login);
                result__.endWriteParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void getUser_completed__(Ice.AsyncResult r__, Bellamira.Callback_UserManager_getUser cb__, Ice.ExceptionCallback excb__)
        {
            Bellamira.User ret__;
            try
            {
                ret__ = end_getUser(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<Bellamira.Callback_UserManager_getUserType> begin_getUserType(string nameType)
        {
            return begin_getUserType(nameType, null, false, false, null, null);
        }

        public Ice.AsyncResult<Bellamira.Callback_UserManager_getUserType> begin_getUserType(string nameType, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_getUserType(nameType, ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_getUserType(string nameType, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getUserType(nameType, null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_getUserType(string nameType, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getUserType(nameType, ctx__, true, false, cb__, cookie__);
        }

        private const string __getUserType_name = "getUserType";

        public Bellamira.UserType end_getUserType(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __getUserType_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                Bellamira.UserType ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                ret__ = null;
                ret__ = Bellamira.UserType.read__(is__, ret__);
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<Bellamira.Callback_UserManager_getUserType> begin_getUserType(string nameType, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__getUserType_name);
            IceInternal.TwowayOutgoingAsync<Bellamira.Callback_UserManager_getUserType> result__ =  getTwowayOutgoingAsync<Bellamira.Callback_UserManager_getUserType>(__getUserType_name, getUserType_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__getUserType_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                os__.writeString(nameType);
                result__.endWriteParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void getUserType_completed__(Ice.AsyncResult r__, Bellamira.Callback_UserManager_getUserType cb__, Ice.ExceptionCallback excb__)
        {
            Bellamira.UserType ret__;
            try
            {
                ret__ = end_getUserType(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<Bellamira.Callback_UserManager_modifyUser> begin_modifyUser(Bellamira.User u, string login)
        {
            return begin_modifyUser(u, login, null, false, false, null, null);
        }

        public Ice.AsyncResult<Bellamira.Callback_UserManager_modifyUser> begin_modifyUser(Bellamira.User u, string login, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_modifyUser(u, login, ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_modifyUser(Bellamira.User u, string login, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_modifyUser(u, login, null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_modifyUser(Bellamira.User u, string login, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_modifyUser(u, login, ctx__, true, false, cb__, cookie__);
        }

        private const string __modifyUser_name = "modifyUser";

        public bool end_modifyUser(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __modifyUser_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                bool ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                ret__ = is__.readBool();
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<Bellamira.Callback_UserManager_modifyUser> begin_modifyUser(Bellamira.User u, string login, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__modifyUser_name);
            IceInternal.TwowayOutgoingAsync<Bellamira.Callback_UserManager_modifyUser> result__ =  getTwowayOutgoingAsync<Bellamira.Callback_UserManager_modifyUser>(__modifyUser_name, modifyUser_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__modifyUser_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                os__.writeObject(u);
                os__.writeString(login);
                os__.writePendingObjects();
                result__.endWriteParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void modifyUser_completed__(Ice.AsyncResult r__, Bellamira.Callback_UserManager_modifyUser cb__, Ice.ExceptionCallback excb__)
        {
            bool ret__;
            try
            {
                ret__ = end_modifyUser(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<Bellamira.Callback_UserManager_modifyUserType> begin_modifyUserType(Bellamira.UserType ut, string login)
        {
            return begin_modifyUserType(ut, login, null, false, false, null, null);
        }

        public Ice.AsyncResult<Bellamira.Callback_UserManager_modifyUserType> begin_modifyUserType(Bellamira.UserType ut, string login, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_modifyUserType(ut, login, ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_modifyUserType(Bellamira.UserType ut, string login, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_modifyUserType(ut, login, null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_modifyUserType(Bellamira.UserType ut, string login, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_modifyUserType(ut, login, ctx__, true, false, cb__, cookie__);
        }

        private const string __modifyUserType_name = "modifyUserType";

        public bool end_modifyUserType(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __modifyUserType_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                bool ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                ret__ = is__.readBool();
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<Bellamira.Callback_UserManager_modifyUserType> begin_modifyUserType(Bellamira.UserType ut, string login, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__modifyUserType_name);
            IceInternal.TwowayOutgoingAsync<Bellamira.Callback_UserManager_modifyUserType> result__ =  getTwowayOutgoingAsync<Bellamira.Callback_UserManager_modifyUserType>(__modifyUserType_name, modifyUserType_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__modifyUserType_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                Bellamira.UserType.write__(os__, ut);
                os__.writeString(login);
                result__.endWriteParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void modifyUserType_completed__(Ice.AsyncResult r__, Bellamira.Callback_UserManager_modifyUserType cb__, Ice.ExceptionCallback excb__)
        {
            bool ret__;
            try
            {
                ret__ = end_modifyUserType(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        #endregion

        #region Checked and unchecked cast operations

        public static UserManagerPrx checkedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            UserManagerPrx r = b as UserManagerPrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                UserManagerPrxHelper h = new UserManagerPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static UserManagerPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            UserManagerPrx r = b as UserManagerPrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                UserManagerPrxHelper h = new UserManagerPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static UserManagerPrx checkedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    UserManagerPrxHelper h = new UserManagerPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static UserManagerPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    UserManagerPrxHelper h = new UserManagerPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static UserManagerPrx uncheckedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            UserManagerPrx r = b as UserManagerPrx;
            if(r == null)
            {
                UserManagerPrxHelper h = new UserManagerPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static UserManagerPrx uncheckedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            UserManagerPrxHelper h = new UserManagerPrxHelper();
            h.copyFrom__(bb);
            return h;
        }

        public static readonly string[] ids__ =
        {
            "::Bellamira::UserManager",
            "::Ice::Object"
        };

        public static string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Marshaling support

        public static void write__(IceInternal.BasicStream os__, UserManagerPrx v__)
        {
            os__.writeProxy(v__);
        }

        public static UserManagerPrx read__(IceInternal.BasicStream is__)
        {
            Ice.ObjectPrx proxy = is__.readProxy();
            if(proxy != null)
            {
                UserManagerPrxHelper result = new UserManagerPrxHelper();
                result.copyFrom__(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public sealed class GroupManagerPrxHelper : Ice.ObjectPrxHelperBase, GroupManagerPrx
    {
        #region Synchronous operations

        public bool addGroup(Bellamira.Group gp)
        {
            return this.addGroup(gp, null, false);
        }

        public bool addGroup(Bellamira.Group gp, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return this.addGroup(gp, context__, true);
        }

        private bool addGroup(Bellamira.Group gp, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__addGroup_name);
            return end_addGroup(begin_addGroup(gp, context__, explicitCtx__, true, null, null));
        }

        public bool addUserInGroup(Bellamira.User u, int idGr)
        {
            return this.addUserInGroup(u, idGr, null, false);
        }

        public bool addUserInGroup(Bellamira.User u, int idGr, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return this.addUserInGroup(u, idGr, context__, true);
        }

        private bool addUserInGroup(Bellamira.User u, int idGr, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__addUserInGroup_name);
            return end_addUserInGroup(begin_addUserInGroup(u, idGr, context__, explicitCtx__, true, null, null));
        }

        public bool delGroup(int idGr)
        {
            return this.delGroup(idGr, null, false);
        }

        public bool delGroup(int idGr, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return this.delGroup(idGr, context__, true);
        }

        private bool delGroup(int idGr, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__delGroup_name);
            return end_delGroup(begin_delGroup(idGr, context__, explicitCtx__, true, null, null));
        }

        public bool delUserFromGroup(Bellamira.User u, int idGr)
        {
            return this.delUserFromGroup(u, idGr, null, false);
        }

        public bool delUserFromGroup(Bellamira.User u, int idGr, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return this.delUserFromGroup(u, idGr, context__, true);
        }

        private bool delUserFromGroup(Bellamira.User u, int idGr, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__delUserFromGroup_name);
            return end_delUserFromGroup(begin_delUserFromGroup(u, idGr, context__, explicitCtx__, true, null, null));
        }

        public Bellamira.Group[] getAllGroups()
        {
            return this.getAllGroups(null, false);
        }

        public Bellamira.Group[] getAllGroups(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            return this.getAllGroups(context__, true);
        }

        private Bellamira.Group[] getAllGroups(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__getAllGroups_name);
            return end_getAllGroups(begin_getAllGroups(context__, explicitCtx__, true, null, null));
        }

        public Bellamira.Group getGroup(int idGr)
        {
            return this.getGroup(idGr, null, false);
        }

        public Bellamira.Group getGroup(int idGr, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return this.getGroup(idGr, context__, true);
        }

        private Bellamira.Group getGroup(int idGr, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__getGroup_name);
            return end_getGroup(begin_getGroup(idGr, context__, explicitCtx__, true, null, null));
        }

        public Bellamira.Group getGroupbyName(string nameGroup)
        {
            return this.getGroupbyName(nameGroup, null, false);
        }

        public Bellamira.Group getGroupbyName(string nameGroup, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return this.getGroupbyName(nameGroup, context__, true);
        }

        private Bellamira.Group getGroupbyName(string nameGroup, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__getGroupbyName_name);
            return end_getGroupbyName(begin_getGroupbyName(nameGroup, context__, explicitCtx__, true, null, null));
        }

        public bool modifyGroup(Bellamira.Group gp, int idGr)
        {
            return this.modifyGroup(gp, idGr, null, false);
        }

        public bool modifyGroup(Bellamira.Group gp, int idGr, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return this.modifyGroup(gp, idGr, context__, true);
        }

        private bool modifyGroup(Bellamira.Group gp, int idGr, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__modifyGroup_name);
            return end_modifyGroup(begin_modifyGroup(gp, idGr, context__, explicitCtx__, true, null, null));
        }

        #endregion

        #region Asynchronous operations

        public Ice.AsyncResult<Bellamira.Callback_GroupManager_addGroup> begin_addGroup(Bellamira.Group gp)
        {
            return begin_addGroup(gp, null, false, false, null, null);
        }

        public Ice.AsyncResult<Bellamira.Callback_GroupManager_addGroup> begin_addGroup(Bellamira.Group gp, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_addGroup(gp, ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_addGroup(Bellamira.Group gp, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_addGroup(gp, null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_addGroup(Bellamira.Group gp, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_addGroup(gp, ctx__, true, false, cb__, cookie__);
        }

        private const string __addGroup_name = "addGroup";

        public bool end_addGroup(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __addGroup_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                bool ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                ret__ = is__.readBool();
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<Bellamira.Callback_GroupManager_addGroup> begin_addGroup(Bellamira.Group gp, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__addGroup_name);
            IceInternal.TwowayOutgoingAsync<Bellamira.Callback_GroupManager_addGroup> result__ =  getTwowayOutgoingAsync<Bellamira.Callback_GroupManager_addGroup>(__addGroup_name, addGroup_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__addGroup_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                Bellamira.Group.write__(os__, gp);
                os__.writePendingObjects();
                result__.endWriteParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void addGroup_completed__(Ice.AsyncResult r__, Bellamira.Callback_GroupManager_addGroup cb__, Ice.ExceptionCallback excb__)
        {
            bool ret__;
            try
            {
                ret__ = end_addGroup(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<Bellamira.Callback_GroupManager_addUserInGroup> begin_addUserInGroup(Bellamira.User u, int idGr)
        {
            return begin_addUserInGroup(u, idGr, null, false, false, null, null);
        }

        public Ice.AsyncResult<Bellamira.Callback_GroupManager_addUserInGroup> begin_addUserInGroup(Bellamira.User u, int idGr, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_addUserInGroup(u, idGr, ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_addUserInGroup(Bellamira.User u, int idGr, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_addUserInGroup(u, idGr, null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_addUserInGroup(Bellamira.User u, int idGr, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_addUserInGroup(u, idGr, ctx__, true, false, cb__, cookie__);
        }

        private const string __addUserInGroup_name = "addUserInGroup";

        public bool end_addUserInGroup(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __addUserInGroup_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                bool ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                ret__ = is__.readBool();
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<Bellamira.Callback_GroupManager_addUserInGroup> begin_addUserInGroup(Bellamira.User u, int idGr, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__addUserInGroup_name);
            IceInternal.TwowayOutgoingAsync<Bellamira.Callback_GroupManager_addUserInGroup> result__ =  getTwowayOutgoingAsync<Bellamira.Callback_GroupManager_addUserInGroup>(__addUserInGroup_name, addUserInGroup_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__addUserInGroup_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                os__.writeObject(u);
                os__.writeInt(idGr);
                os__.writePendingObjects();
                result__.endWriteParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void addUserInGroup_completed__(Ice.AsyncResult r__, Bellamira.Callback_GroupManager_addUserInGroup cb__, Ice.ExceptionCallback excb__)
        {
            bool ret__;
            try
            {
                ret__ = end_addUserInGroup(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<Bellamira.Callback_GroupManager_delGroup> begin_delGroup(int idGr)
        {
            return begin_delGroup(idGr, null, false, false, null, null);
        }

        public Ice.AsyncResult<Bellamira.Callback_GroupManager_delGroup> begin_delGroup(int idGr, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_delGroup(idGr, ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_delGroup(int idGr, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_delGroup(idGr, null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_delGroup(int idGr, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_delGroup(idGr, ctx__, true, false, cb__, cookie__);
        }

        private const string __delGroup_name = "delGroup";

        public bool end_delGroup(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __delGroup_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                bool ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                ret__ = is__.readBool();
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<Bellamira.Callback_GroupManager_delGroup> begin_delGroup(int idGr, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__delGroup_name);
            IceInternal.TwowayOutgoingAsync<Bellamira.Callback_GroupManager_delGroup> result__ =  getTwowayOutgoingAsync<Bellamira.Callback_GroupManager_delGroup>(__delGroup_name, delGroup_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__delGroup_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                os__.writeInt(idGr);
                result__.endWriteParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void delGroup_completed__(Ice.AsyncResult r__, Bellamira.Callback_GroupManager_delGroup cb__, Ice.ExceptionCallback excb__)
        {
            bool ret__;
            try
            {
                ret__ = end_delGroup(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<Bellamira.Callback_GroupManager_delUserFromGroup> begin_delUserFromGroup(Bellamira.User u, int idGr)
        {
            return begin_delUserFromGroup(u, idGr, null, false, false, null, null);
        }

        public Ice.AsyncResult<Bellamira.Callback_GroupManager_delUserFromGroup> begin_delUserFromGroup(Bellamira.User u, int idGr, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_delUserFromGroup(u, idGr, ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_delUserFromGroup(Bellamira.User u, int idGr, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_delUserFromGroup(u, idGr, null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_delUserFromGroup(Bellamira.User u, int idGr, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_delUserFromGroup(u, idGr, ctx__, true, false, cb__, cookie__);
        }

        private const string __delUserFromGroup_name = "delUserFromGroup";

        public bool end_delUserFromGroup(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __delUserFromGroup_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                bool ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                ret__ = is__.readBool();
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<Bellamira.Callback_GroupManager_delUserFromGroup> begin_delUserFromGroup(Bellamira.User u, int idGr, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__delUserFromGroup_name);
            IceInternal.TwowayOutgoingAsync<Bellamira.Callback_GroupManager_delUserFromGroup> result__ =  getTwowayOutgoingAsync<Bellamira.Callback_GroupManager_delUserFromGroup>(__delUserFromGroup_name, delUserFromGroup_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__delUserFromGroup_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                os__.writeObject(u);
                os__.writeInt(idGr);
                os__.writePendingObjects();
                result__.endWriteParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void delUserFromGroup_completed__(Ice.AsyncResult r__, Bellamira.Callback_GroupManager_delUserFromGroup cb__, Ice.ExceptionCallback excb__)
        {
            bool ret__;
            try
            {
                ret__ = end_delUserFromGroup(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<Bellamira.Callback_GroupManager_getAllGroups> begin_getAllGroups()
        {
            return begin_getAllGroups(null, false, false, null, null);
        }

        public Ice.AsyncResult<Bellamira.Callback_GroupManager_getAllGroups> begin_getAllGroups(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_getAllGroups(ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_getAllGroups(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getAllGroups(null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_getAllGroups(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getAllGroups(ctx__, true, false, cb__, cookie__);
        }

        private const string __getAllGroups_name = "getAllGroups";

        public Bellamira.Group[] end_getAllGroups(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __getAllGroups_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                Bellamira.Group[] ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                ret__ = Bellamira.groupsHelper.read(is__);
                is__.readPendingObjects();
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<Bellamira.Callback_GroupManager_getAllGroups> begin_getAllGroups(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__getAllGroups_name);
            IceInternal.TwowayOutgoingAsync<Bellamira.Callback_GroupManager_getAllGroups> result__ =  getTwowayOutgoingAsync<Bellamira.Callback_GroupManager_getAllGroups>(__getAllGroups_name, getAllGroups_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__getAllGroups_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                result__.writeEmptyParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void getAllGroups_completed__(Ice.AsyncResult r__, Bellamira.Callback_GroupManager_getAllGroups cb__, Ice.ExceptionCallback excb__)
        {
            Bellamira.Group[] ret__;
            try
            {
                ret__ = end_getAllGroups(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<Bellamira.Callback_GroupManager_getGroup> begin_getGroup(int idGr)
        {
            return begin_getGroup(idGr, null, false, false, null, null);
        }

        public Ice.AsyncResult<Bellamira.Callback_GroupManager_getGroup> begin_getGroup(int idGr, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_getGroup(idGr, ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_getGroup(int idGr, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getGroup(idGr, null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_getGroup(int idGr, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getGroup(idGr, ctx__, true, false, cb__, cookie__);
        }

        private const string __getGroup_name = "getGroup";

        public Bellamira.Group end_getGroup(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __getGroup_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                Bellamira.Group ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                ret__ = null;
                ret__ = Bellamira.Group.read__(is__, ret__);
                is__.readPendingObjects();
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<Bellamira.Callback_GroupManager_getGroup> begin_getGroup(int idGr, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__getGroup_name);
            IceInternal.TwowayOutgoingAsync<Bellamira.Callback_GroupManager_getGroup> result__ =  getTwowayOutgoingAsync<Bellamira.Callback_GroupManager_getGroup>(__getGroup_name, getGroup_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__getGroup_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                os__.writeInt(idGr);
                result__.endWriteParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void getGroup_completed__(Ice.AsyncResult r__, Bellamira.Callback_GroupManager_getGroup cb__, Ice.ExceptionCallback excb__)
        {
            Bellamira.Group ret__;
            try
            {
                ret__ = end_getGroup(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<Bellamira.Callback_GroupManager_getGroupbyName> begin_getGroupbyName(string nameGroup)
        {
            return begin_getGroupbyName(nameGroup, null, false, false, null, null);
        }

        public Ice.AsyncResult<Bellamira.Callback_GroupManager_getGroupbyName> begin_getGroupbyName(string nameGroup, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_getGroupbyName(nameGroup, ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_getGroupbyName(string nameGroup, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getGroupbyName(nameGroup, null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_getGroupbyName(string nameGroup, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getGroupbyName(nameGroup, ctx__, true, false, cb__, cookie__);
        }

        private const string __getGroupbyName_name = "getGroupbyName";

        public Bellamira.Group end_getGroupbyName(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __getGroupbyName_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                Bellamira.Group ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                ret__ = null;
                ret__ = Bellamira.Group.read__(is__, ret__);
                is__.readPendingObjects();
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<Bellamira.Callback_GroupManager_getGroupbyName> begin_getGroupbyName(string nameGroup, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__getGroupbyName_name);
            IceInternal.TwowayOutgoingAsync<Bellamira.Callback_GroupManager_getGroupbyName> result__ =  getTwowayOutgoingAsync<Bellamira.Callback_GroupManager_getGroupbyName>(__getGroupbyName_name, getGroupbyName_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__getGroupbyName_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                os__.writeString(nameGroup);
                result__.endWriteParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void getGroupbyName_completed__(Ice.AsyncResult r__, Bellamira.Callback_GroupManager_getGroupbyName cb__, Ice.ExceptionCallback excb__)
        {
            Bellamira.Group ret__;
            try
            {
                ret__ = end_getGroupbyName(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<Bellamira.Callback_GroupManager_modifyGroup> begin_modifyGroup(Bellamira.Group gp, int idGr)
        {
            return begin_modifyGroup(gp, idGr, null, false, false, null, null);
        }

        public Ice.AsyncResult<Bellamira.Callback_GroupManager_modifyGroup> begin_modifyGroup(Bellamira.Group gp, int idGr, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_modifyGroup(gp, idGr, ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_modifyGroup(Bellamira.Group gp, int idGr, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_modifyGroup(gp, idGr, null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_modifyGroup(Bellamira.Group gp, int idGr, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_modifyGroup(gp, idGr, ctx__, true, false, cb__, cookie__);
        }

        private const string __modifyGroup_name = "modifyGroup";

        public bool end_modifyGroup(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __modifyGroup_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                bool ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                ret__ = is__.readBool();
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<Bellamira.Callback_GroupManager_modifyGroup> begin_modifyGroup(Bellamira.Group gp, int idGr, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__modifyGroup_name);
            IceInternal.TwowayOutgoingAsync<Bellamira.Callback_GroupManager_modifyGroup> result__ =  getTwowayOutgoingAsync<Bellamira.Callback_GroupManager_modifyGroup>(__modifyGroup_name, modifyGroup_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__modifyGroup_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                Bellamira.Group.write__(os__, gp);
                os__.writeInt(idGr);
                os__.writePendingObjects();
                result__.endWriteParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void modifyGroup_completed__(Ice.AsyncResult r__, Bellamira.Callback_GroupManager_modifyGroup cb__, Ice.ExceptionCallback excb__)
        {
            bool ret__;
            try
            {
                ret__ = end_modifyGroup(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        #endregion

        #region Checked and unchecked cast operations

        public static GroupManagerPrx checkedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            GroupManagerPrx r = b as GroupManagerPrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                GroupManagerPrxHelper h = new GroupManagerPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static GroupManagerPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            GroupManagerPrx r = b as GroupManagerPrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                GroupManagerPrxHelper h = new GroupManagerPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static GroupManagerPrx checkedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    GroupManagerPrxHelper h = new GroupManagerPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static GroupManagerPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    GroupManagerPrxHelper h = new GroupManagerPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static GroupManagerPrx uncheckedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            GroupManagerPrx r = b as GroupManagerPrx;
            if(r == null)
            {
                GroupManagerPrxHelper h = new GroupManagerPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static GroupManagerPrx uncheckedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            GroupManagerPrxHelper h = new GroupManagerPrxHelper();
            h.copyFrom__(bb);
            return h;
        }

        public static readonly string[] ids__ =
        {
            "::Bellamira::GroupManager",
            "::Ice::Object"
        };

        public static string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Marshaling support

        public static void write__(IceInternal.BasicStream os__, GroupManagerPrx v__)
        {
            os__.writeProxy(v__);
        }

        public static GroupManagerPrx read__(IceInternal.BasicStream is__)
        {
            Ice.ObjectPrx proxy = is__.readProxy();
            if(proxy != null)
            {
                GroupManagerPrxHelper result = new GroupManagerPrxHelper();
                result.copyFrom__(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public sealed class TimeTableManagerPrxHelper : Ice.ObjectPrxHelperBase, TimeTableManagerPrx
    {
        #region Synchronous operations

        public bool addTimeTableEntry(Bellamira.TimeTableEntry te)
        {
            return this.addTimeTableEntry(te, null, false);
        }

        public bool addTimeTableEntry(Bellamira.TimeTableEntry te, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return this.addTimeTableEntry(te, context__, true);
        }

        private bool addTimeTableEntry(Bellamira.TimeTableEntry te, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__addTimeTableEntry_name);
            return end_addTimeTableEntry(begin_addTimeTableEntry(te, context__, explicitCtx__, true, null, null));
        }

        public bool delTimeTableEntry(int id)
        {
            return this.delTimeTableEntry(id, null, false);
        }

        public bool delTimeTableEntry(int id, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return this.delTimeTableEntry(id, context__, true);
        }

        private bool delTimeTableEntry(int id, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__delTimeTableEntry_name);
            return end_delTimeTableEntry(begin_delTimeTableEntry(id, context__, explicitCtx__, true, null, null));
        }

        public Bellamira.TimeTableEntry[] getAllTimeTable()
        {
            return this.getAllTimeTable(null, false);
        }

        public Bellamira.TimeTableEntry[] getAllTimeTable(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            return this.getAllTimeTable(context__, true);
        }

        private Bellamira.TimeTableEntry[] getAllTimeTable(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__getAllTimeTable_name);
            return end_getAllTimeTable(begin_getAllTimeTable(context__, explicitCtx__, true, null, null));
        }

        public Bellamira.TimeTableEntry[] getTimeTableForGroup(Bellamira.Group gp)
        {
            return this.getTimeTableForGroup(gp, null, false);
        }

        public Bellamira.TimeTableEntry[] getTimeTableForGroup(Bellamira.Group gp, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return this.getTimeTableForGroup(gp, context__, true);
        }

        private Bellamira.TimeTableEntry[] getTimeTableForGroup(Bellamira.Group gp, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__getTimeTableForGroup_name);
            return end_getTimeTableForGroup(begin_getTimeTableForGroup(gp, context__, explicitCtx__, true, null, null));
        }

        public bool modifyTimeTableEntry(Bellamira.TimeTableEntry te, int id)
        {
            return this.modifyTimeTableEntry(te, id, null, false);
        }

        public bool modifyTimeTableEntry(Bellamira.TimeTableEntry te, int id, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return this.modifyTimeTableEntry(te, id, context__, true);
        }

        private bool modifyTimeTableEntry(Bellamira.TimeTableEntry te, int id, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__modifyTimeTableEntry_name);
            return end_modifyTimeTableEntry(begin_modifyTimeTableEntry(te, id, context__, explicitCtx__, true, null, null));
        }

        #endregion

        #region Asynchronous operations

        public Ice.AsyncResult<Bellamira.Callback_TimeTableManager_addTimeTableEntry> begin_addTimeTableEntry(Bellamira.TimeTableEntry te)
        {
            return begin_addTimeTableEntry(te, null, false, false, null, null);
        }

        public Ice.AsyncResult<Bellamira.Callback_TimeTableManager_addTimeTableEntry> begin_addTimeTableEntry(Bellamira.TimeTableEntry te, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_addTimeTableEntry(te, ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_addTimeTableEntry(Bellamira.TimeTableEntry te, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_addTimeTableEntry(te, null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_addTimeTableEntry(Bellamira.TimeTableEntry te, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_addTimeTableEntry(te, ctx__, true, false, cb__, cookie__);
        }

        private const string __addTimeTableEntry_name = "addTimeTableEntry";

        public bool end_addTimeTableEntry(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __addTimeTableEntry_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                bool ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                ret__ = is__.readBool();
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<Bellamira.Callback_TimeTableManager_addTimeTableEntry> begin_addTimeTableEntry(Bellamira.TimeTableEntry te, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__addTimeTableEntry_name);
            IceInternal.TwowayOutgoingAsync<Bellamira.Callback_TimeTableManager_addTimeTableEntry> result__ =  getTwowayOutgoingAsync<Bellamira.Callback_TimeTableManager_addTimeTableEntry>(__addTimeTableEntry_name, addTimeTableEntry_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__addTimeTableEntry_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                Bellamira.TimeTableEntry.write__(os__, te);
                os__.writePendingObjects();
                result__.endWriteParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void addTimeTableEntry_completed__(Ice.AsyncResult r__, Bellamira.Callback_TimeTableManager_addTimeTableEntry cb__, Ice.ExceptionCallback excb__)
        {
            bool ret__;
            try
            {
                ret__ = end_addTimeTableEntry(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<Bellamira.Callback_TimeTableManager_delTimeTableEntry> begin_delTimeTableEntry(int id)
        {
            return begin_delTimeTableEntry(id, null, false, false, null, null);
        }

        public Ice.AsyncResult<Bellamira.Callback_TimeTableManager_delTimeTableEntry> begin_delTimeTableEntry(int id, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_delTimeTableEntry(id, ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_delTimeTableEntry(int id, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_delTimeTableEntry(id, null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_delTimeTableEntry(int id, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_delTimeTableEntry(id, ctx__, true, false, cb__, cookie__);
        }

        private const string __delTimeTableEntry_name = "delTimeTableEntry";

        public bool end_delTimeTableEntry(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __delTimeTableEntry_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                bool ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                ret__ = is__.readBool();
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<Bellamira.Callback_TimeTableManager_delTimeTableEntry> begin_delTimeTableEntry(int id, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__delTimeTableEntry_name);
            IceInternal.TwowayOutgoingAsync<Bellamira.Callback_TimeTableManager_delTimeTableEntry> result__ =  getTwowayOutgoingAsync<Bellamira.Callback_TimeTableManager_delTimeTableEntry>(__delTimeTableEntry_name, delTimeTableEntry_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__delTimeTableEntry_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                os__.writeInt(id);
                result__.endWriteParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void delTimeTableEntry_completed__(Ice.AsyncResult r__, Bellamira.Callback_TimeTableManager_delTimeTableEntry cb__, Ice.ExceptionCallback excb__)
        {
            bool ret__;
            try
            {
                ret__ = end_delTimeTableEntry(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<Bellamira.Callback_TimeTableManager_getAllTimeTable> begin_getAllTimeTable()
        {
            return begin_getAllTimeTable(null, false, false, null, null);
        }

        public Ice.AsyncResult<Bellamira.Callback_TimeTableManager_getAllTimeTable> begin_getAllTimeTable(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_getAllTimeTable(ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_getAllTimeTable(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getAllTimeTable(null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_getAllTimeTable(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getAllTimeTable(ctx__, true, false, cb__, cookie__);
        }

        private const string __getAllTimeTable_name = "getAllTimeTable";

        public Bellamira.TimeTableEntry[] end_getAllTimeTable(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __getAllTimeTable_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                Bellamira.TimeTableEntry[] ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                ret__ = Bellamira.timeTableHelper.read(is__);
                is__.readPendingObjects();
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<Bellamira.Callback_TimeTableManager_getAllTimeTable> begin_getAllTimeTable(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__getAllTimeTable_name);
            IceInternal.TwowayOutgoingAsync<Bellamira.Callback_TimeTableManager_getAllTimeTable> result__ =  getTwowayOutgoingAsync<Bellamira.Callback_TimeTableManager_getAllTimeTable>(__getAllTimeTable_name, getAllTimeTable_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__getAllTimeTable_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                result__.writeEmptyParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void getAllTimeTable_completed__(Ice.AsyncResult r__, Bellamira.Callback_TimeTableManager_getAllTimeTable cb__, Ice.ExceptionCallback excb__)
        {
            Bellamira.TimeTableEntry[] ret__;
            try
            {
                ret__ = end_getAllTimeTable(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<Bellamira.Callback_TimeTableManager_getTimeTableForGroup> begin_getTimeTableForGroup(Bellamira.Group gp)
        {
            return begin_getTimeTableForGroup(gp, null, false, false, null, null);
        }

        public Ice.AsyncResult<Bellamira.Callback_TimeTableManager_getTimeTableForGroup> begin_getTimeTableForGroup(Bellamira.Group gp, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_getTimeTableForGroup(gp, ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_getTimeTableForGroup(Bellamira.Group gp, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getTimeTableForGroup(gp, null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_getTimeTableForGroup(Bellamira.Group gp, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getTimeTableForGroup(gp, ctx__, true, false, cb__, cookie__);
        }

        private const string __getTimeTableForGroup_name = "getTimeTableForGroup";

        public Bellamira.TimeTableEntry[] end_getTimeTableForGroup(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __getTimeTableForGroup_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                Bellamira.TimeTableEntry[] ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                ret__ = Bellamira.timeTableHelper.read(is__);
                is__.readPendingObjects();
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<Bellamira.Callback_TimeTableManager_getTimeTableForGroup> begin_getTimeTableForGroup(Bellamira.Group gp, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__getTimeTableForGroup_name);
            IceInternal.TwowayOutgoingAsync<Bellamira.Callback_TimeTableManager_getTimeTableForGroup> result__ =  getTwowayOutgoingAsync<Bellamira.Callback_TimeTableManager_getTimeTableForGroup>(__getTimeTableForGroup_name, getTimeTableForGroup_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__getTimeTableForGroup_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                Bellamira.Group.write__(os__, gp);
                os__.writePendingObjects();
                result__.endWriteParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void getTimeTableForGroup_completed__(Ice.AsyncResult r__, Bellamira.Callback_TimeTableManager_getTimeTableForGroup cb__, Ice.ExceptionCallback excb__)
        {
            Bellamira.TimeTableEntry[] ret__;
            try
            {
                ret__ = end_getTimeTableForGroup(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<Bellamira.Callback_TimeTableManager_modifyTimeTableEntry> begin_modifyTimeTableEntry(Bellamira.TimeTableEntry te, int id)
        {
            return begin_modifyTimeTableEntry(te, id, null, false, false, null, null);
        }

        public Ice.AsyncResult<Bellamira.Callback_TimeTableManager_modifyTimeTableEntry> begin_modifyTimeTableEntry(Bellamira.TimeTableEntry te, int id, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_modifyTimeTableEntry(te, id, ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_modifyTimeTableEntry(Bellamira.TimeTableEntry te, int id, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_modifyTimeTableEntry(te, id, null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_modifyTimeTableEntry(Bellamira.TimeTableEntry te, int id, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_modifyTimeTableEntry(te, id, ctx__, true, false, cb__, cookie__);
        }

        private const string __modifyTimeTableEntry_name = "modifyTimeTableEntry";

        public bool end_modifyTimeTableEntry(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __modifyTimeTableEntry_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                bool ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                ret__ = is__.readBool();
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<Bellamira.Callback_TimeTableManager_modifyTimeTableEntry> begin_modifyTimeTableEntry(Bellamira.TimeTableEntry te, int id, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__modifyTimeTableEntry_name);
            IceInternal.TwowayOutgoingAsync<Bellamira.Callback_TimeTableManager_modifyTimeTableEntry> result__ =  getTwowayOutgoingAsync<Bellamira.Callback_TimeTableManager_modifyTimeTableEntry>(__modifyTimeTableEntry_name, modifyTimeTableEntry_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__modifyTimeTableEntry_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                Bellamira.TimeTableEntry.write__(os__, te);
                os__.writeInt(id);
                os__.writePendingObjects();
                result__.endWriteParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void modifyTimeTableEntry_completed__(Ice.AsyncResult r__, Bellamira.Callback_TimeTableManager_modifyTimeTableEntry cb__, Ice.ExceptionCallback excb__)
        {
            bool ret__;
            try
            {
                ret__ = end_modifyTimeTableEntry(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        #endregion

        #region Checked and unchecked cast operations

        public static TimeTableManagerPrx checkedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            TimeTableManagerPrx r = b as TimeTableManagerPrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                TimeTableManagerPrxHelper h = new TimeTableManagerPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static TimeTableManagerPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            TimeTableManagerPrx r = b as TimeTableManagerPrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                TimeTableManagerPrxHelper h = new TimeTableManagerPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static TimeTableManagerPrx checkedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    TimeTableManagerPrxHelper h = new TimeTableManagerPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static TimeTableManagerPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    TimeTableManagerPrxHelper h = new TimeTableManagerPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static TimeTableManagerPrx uncheckedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            TimeTableManagerPrx r = b as TimeTableManagerPrx;
            if(r == null)
            {
                TimeTableManagerPrxHelper h = new TimeTableManagerPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static TimeTableManagerPrx uncheckedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            TimeTableManagerPrxHelper h = new TimeTableManagerPrxHelper();
            h.copyFrom__(bb);
            return h;
        }

        public static readonly string[] ids__ =
        {
            "::Bellamira::TimeTableManager",
            "::Ice::Object"
        };

        public static string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Marshaling support

        public static void write__(IceInternal.BasicStream os__, TimeTableManagerPrx v__)
        {
            os__.writeProxy(v__);
        }

        public static TimeTableManagerPrx read__(IceInternal.BasicStream is__)
        {
            Ice.ObjectPrx proxy = is__.readProxy();
            if(proxy != null)
            {
                TimeTableManagerPrxHelper result = new TimeTableManagerPrxHelper();
                result.copyFrom__(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }
}

namespace Bellamira
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public abstract class EntryDisp_ : Ice.ObjectImpl, Entry
    {
        #region Slice operations

        public Bellamira.SessionPrx login(string name, string password)
        {
            return login(name, password, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract Bellamira.SessionPrx login(string name, string password, Ice.Current current__);

        public string Test()
        {
            return Test(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract string Test(Ice.Current current__);

        public Bellamira.SessionPrx Register(Bellamira.User user)
        {
            return Register(user, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract Bellamira.SessionPrx Register(Bellamira.User user, Ice.Current current__);

        #endregion

        #region Slice type-related members

        public static new readonly string[] ids__ = 
        {
            "::Bellamira::Entry",
            "::Ice::Object"
        };

        public override bool ice_isA(string s)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override bool ice_isA(string s, Ice.Current current__)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override string[] ice_ids()
        {
            return ids__;
        }

        public override string[] ice_ids(Ice.Current current__)
        {
            return ids__;
        }

        public override string ice_id()
        {
            return ids__[0];
        }

        public override string ice_id(Ice.Current current__)
        {
            return ids__[0];
        }

        public static new string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Operation dispatch

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus login___(Entry obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            string name;
            string password;
            name = is__.readString();
            password = is__.readString();
            inS__.endReadParams();
            Bellamira.SessionPrx ret__ = obj__.login(name, password, current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            Bellamira.SessionPrxHelper.write__(os__, ret__);
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus Test___(Entry obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.readEmptyParams();
            string ret__ = obj__.Test(current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            os__.writeString(ret__);
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus Register___(Entry obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            IceInternal.ParamPatcher<Bellamira.User> user__PP = new IceInternal.ParamPatcher<Bellamira.User>(Bellamira.User.ice_staticId());
            is__.readObject(user__PP);
            is__.readPendingObjects();
            inS__.endReadParams();
            Bellamira.SessionPrx ret__ = obj__.Register(user__PP.value, current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            Bellamira.SessionPrxHelper.write__(os__, ret__);
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        private static string[] all__ =
        {
            "Register",
            "Test",
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping",
            "login"
        };

        public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
        {
            int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return Register___(this, inS__, current__);
                }
                case 1:
                {
                    return Test___(this, inS__, current__);
                }
                case 2:
                {
                    return Ice.ObjectImpl.ice_id___(this, inS__, current__);
                }
                case 3:
                {
                    return Ice.ObjectImpl.ice_ids___(this, inS__, current__);
                }
                case 4:
                {
                    return Ice.ObjectImpl.ice_isA___(this, inS__, current__);
                }
                case 5:
                {
                    return Ice.ObjectImpl.ice_ping___(this, inS__, current__);
                }
                case 6:
                {
                    return login___(this, inS__, current__);
                }
            }

            _System.Diagnostics.Debug.Assert(false);
            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
        }

        #endregion

        #region Marshaling support

        protected override void writeImpl__(IceInternal.BasicStream os__)
        {
            os__.startWriteSlice(ice_staticId(), -1, true);
            os__.endWriteSlice();
        }

        protected override void readImpl__(IceInternal.BasicStream is__)
        {
            is__.startReadSlice();
            is__.endReadSlice();
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public abstract class SessionDisp_ : Ice.ObjectImpl, Session
    {
        #region Slice operations

        public Bellamira.UserManagerPrx getUserManager()
        {
            return getUserManager(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract Bellamira.UserManagerPrx getUserManager(Ice.Current current__);

        public Bellamira.GroupManagerPrx getGroupManager()
        {
            return getGroupManager(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract Bellamira.GroupManagerPrx getGroupManager(Ice.Current current__);

        public Bellamira.TimeTableManagerPrx getTimeTableManager()
        {
            return getTimeTableManager(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract Bellamira.TimeTableManagerPrx getTimeTableManager(Ice.Current current__);

        #endregion

        #region Slice type-related members

        public static new readonly string[] ids__ = 
        {
            "::Bellamira::Session",
            "::Ice::Object"
        };

        public override bool ice_isA(string s)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override bool ice_isA(string s, Ice.Current current__)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override string[] ice_ids()
        {
            return ids__;
        }

        public override string[] ice_ids(Ice.Current current__)
        {
            return ids__;
        }

        public override string ice_id()
        {
            return ids__[0];
        }

        public override string ice_id(Ice.Current current__)
        {
            return ids__[0];
        }

        public static new string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Operation dispatch

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus getUserManager___(Session obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.readEmptyParams();
            Bellamira.UserManagerPrx ret__ = obj__.getUserManager(current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            Bellamira.UserManagerPrxHelper.write__(os__, ret__);
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus getGroupManager___(Session obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.readEmptyParams();
            Bellamira.GroupManagerPrx ret__ = obj__.getGroupManager(current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            Bellamira.GroupManagerPrxHelper.write__(os__, ret__);
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus getTimeTableManager___(Session obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.readEmptyParams();
            Bellamira.TimeTableManagerPrx ret__ = obj__.getTimeTableManager(current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            Bellamira.TimeTableManagerPrxHelper.write__(os__, ret__);
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        private static string[] all__ =
        {
            "getGroupManager",
            "getTimeTableManager",
            "getUserManager",
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping"
        };

        public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
        {
            int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return getGroupManager___(this, inS__, current__);
                }
                case 1:
                {
                    return getTimeTableManager___(this, inS__, current__);
                }
                case 2:
                {
                    return getUserManager___(this, inS__, current__);
                }
                case 3:
                {
                    return Ice.ObjectImpl.ice_id___(this, inS__, current__);
                }
                case 4:
                {
                    return Ice.ObjectImpl.ice_ids___(this, inS__, current__);
                }
                case 5:
                {
                    return Ice.ObjectImpl.ice_isA___(this, inS__, current__);
                }
                case 6:
                {
                    return Ice.ObjectImpl.ice_ping___(this, inS__, current__);
                }
            }

            _System.Diagnostics.Debug.Assert(false);
            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
        }

        #endregion

        #region Marshaling support

        protected override void writeImpl__(IceInternal.BasicStream os__)
        {
            os__.startWriteSlice(ice_staticId(), -1, true);
            os__.endWriteSlice();
        }

        protected override void readImpl__(IceInternal.BasicStream is__)
        {
            is__.startReadSlice();
            is__.endReadSlice();
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public abstract class UserManagerDisp_ : Ice.ObjectImpl, UserManager
    {
        #region Slice operations

        public Bellamira.User[] getAllUsers()
        {
            return getAllUsers(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract Bellamira.User[] getAllUsers(Ice.Current current__);

        public Bellamira.User getUser(string login)
        {
            return getUser(login, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract Bellamira.User getUser(string login, Ice.Current current__);

        public bool addUser(Bellamira.User u)
        {
            return addUser(u, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract bool addUser(Bellamira.User u, Ice.Current current__);

        public bool delUser(string login)
        {
            return delUser(login, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract bool delUser(string login, Ice.Current current__);

        public bool modifyUser(Bellamira.User u, string login)
        {
            return modifyUser(u, login, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract bool modifyUser(Bellamira.User u, string login, Ice.Current current__);

        public Bellamira.UserType[] getAllUserTypes()
        {
            return getAllUserTypes(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract Bellamira.UserType[] getAllUserTypes(Ice.Current current__);

        public Bellamira.UserType getUserType(string nameType)
        {
            return getUserType(nameType, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract Bellamira.UserType getUserType(string nameType, Ice.Current current__);

        public bool addUserType(Bellamira.UserType ut)
        {
            return addUserType(ut, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract bool addUserType(Bellamira.UserType ut, Ice.Current current__);

        public bool delUserType(string login)
        {
            return delUserType(login, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract bool delUserType(string login, Ice.Current current__);

        public bool modifyUserType(Bellamira.UserType ut, string login)
        {
            return modifyUserType(ut, login, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract bool modifyUserType(Bellamira.UserType ut, string login, Ice.Current current__);

        #endregion

        #region Slice type-related members

        public static new readonly string[] ids__ = 
        {
            "::Bellamira::UserManager",
            "::Ice::Object"
        };

        public override bool ice_isA(string s)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override bool ice_isA(string s, Ice.Current current__)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override string[] ice_ids()
        {
            return ids__;
        }

        public override string[] ice_ids(Ice.Current current__)
        {
            return ids__;
        }

        public override string ice_id()
        {
            return ids__[0];
        }

        public override string ice_id(Ice.Current current__)
        {
            return ids__[0];
        }

        public static new string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Operation dispatch

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus getAllUsers___(UserManager obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.readEmptyParams();
            Bellamira.User[] ret__ = obj__.getAllUsers(current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            Bellamira.usersHelper.write(os__, ret__);
            os__.writePendingObjects();
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus getUser___(UserManager obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            string login;
            login = is__.readString();
            inS__.endReadParams();
            Bellamira.User ret__ = obj__.getUser(login, current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            os__.writeObject(ret__);
            os__.writePendingObjects();
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus addUser___(UserManager obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            IceInternal.ParamPatcher<Bellamira.User> u__PP = new IceInternal.ParamPatcher<Bellamira.User>(Bellamira.User.ice_staticId());
            is__.readObject(u__PP);
            is__.readPendingObjects();
            inS__.endReadParams();
            bool ret__ = obj__.addUser(u__PP.value, current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            os__.writeBool(ret__);
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus delUser___(UserManager obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            string login;
            login = is__.readString();
            inS__.endReadParams();
            bool ret__ = obj__.delUser(login, current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            os__.writeBool(ret__);
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus modifyUser___(UserManager obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            string login;
            IceInternal.ParamPatcher<Bellamira.User> u__PP = new IceInternal.ParamPatcher<Bellamira.User>(Bellamira.User.ice_staticId());
            is__.readObject(u__PP);
            login = is__.readString();
            is__.readPendingObjects();
            inS__.endReadParams();
            bool ret__ = obj__.modifyUser(u__PP.value, login, current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            os__.writeBool(ret__);
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus getAllUserTypes___(UserManager obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.readEmptyParams();
            Bellamira.UserType[] ret__ = obj__.getAllUserTypes(current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            Bellamira.userTypesHelper.write(os__, ret__);
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus getUserType___(UserManager obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            string nameType;
            nameType = is__.readString();
            inS__.endReadParams();
            Bellamira.UserType ret__ = obj__.getUserType(nameType, current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            Bellamira.UserType.write__(os__, ret__);
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus addUserType___(UserManager obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            Bellamira.UserType ut;
            ut = null;
            ut = Bellamira.UserType.read__(is__, ut);
            inS__.endReadParams();
            bool ret__ = obj__.addUserType(ut, current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            os__.writeBool(ret__);
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus delUserType___(UserManager obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            string login;
            login = is__.readString();
            inS__.endReadParams();
            bool ret__ = obj__.delUserType(login, current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            os__.writeBool(ret__);
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus modifyUserType___(UserManager obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            Bellamira.UserType ut;
            ut = null;
            string login;
            ut = Bellamira.UserType.read__(is__, ut);
            login = is__.readString();
            inS__.endReadParams();
            bool ret__ = obj__.modifyUserType(ut, login, current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            os__.writeBool(ret__);
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        private static string[] all__ =
        {
            "addUser",
            "addUserType",
            "delUser",
            "delUserType",
            "getAllUserTypes",
            "getAllUsers",
            "getUser",
            "getUserType",
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping",
            "modifyUser",
            "modifyUserType"
        };

        public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
        {
            int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return addUser___(this, inS__, current__);
                }
                case 1:
                {
                    return addUserType___(this, inS__, current__);
                }
                case 2:
                {
                    return delUser___(this, inS__, current__);
                }
                case 3:
                {
                    return delUserType___(this, inS__, current__);
                }
                case 4:
                {
                    return getAllUserTypes___(this, inS__, current__);
                }
                case 5:
                {
                    return getAllUsers___(this, inS__, current__);
                }
                case 6:
                {
                    return getUser___(this, inS__, current__);
                }
                case 7:
                {
                    return getUserType___(this, inS__, current__);
                }
                case 8:
                {
                    return Ice.ObjectImpl.ice_id___(this, inS__, current__);
                }
                case 9:
                {
                    return Ice.ObjectImpl.ice_ids___(this, inS__, current__);
                }
                case 10:
                {
                    return Ice.ObjectImpl.ice_isA___(this, inS__, current__);
                }
                case 11:
                {
                    return Ice.ObjectImpl.ice_ping___(this, inS__, current__);
                }
                case 12:
                {
                    return modifyUser___(this, inS__, current__);
                }
                case 13:
                {
                    return modifyUserType___(this, inS__, current__);
                }
            }

            _System.Diagnostics.Debug.Assert(false);
            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
        }

        #endregion

        #region Marshaling support

        protected override void writeImpl__(IceInternal.BasicStream os__)
        {
            os__.startWriteSlice(ice_staticId(), -1, true);
            os__.endWriteSlice();
        }

        protected override void readImpl__(IceInternal.BasicStream is__)
        {
            is__.startReadSlice();
            is__.endReadSlice();
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public abstract class GroupManagerDisp_ : Ice.ObjectImpl, GroupManager
    {
        #region Slice operations

        public Bellamira.Group[] getAllGroups()
        {
            return getAllGroups(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract Bellamira.Group[] getAllGroups(Ice.Current current__);

        public Bellamira.Group getGroup(int idGr)
        {
            return getGroup(idGr, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract Bellamira.Group getGroup(int idGr, Ice.Current current__);

        public Bellamira.Group getGroupbyName(string nameGroup)
        {
            return getGroupbyName(nameGroup, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract Bellamira.Group getGroupbyName(string nameGroup, Ice.Current current__);

        public bool addGroup(Bellamira.Group gp)
        {
            return addGroup(gp, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract bool addGroup(Bellamira.Group gp, Ice.Current current__);

        public bool delGroup(int idGr)
        {
            return delGroup(idGr, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract bool delGroup(int idGr, Ice.Current current__);

        public bool modifyGroup(Bellamira.Group gp, int idGr)
        {
            return modifyGroup(gp, idGr, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract bool modifyGroup(Bellamira.Group gp, int idGr, Ice.Current current__);

        public bool addUserInGroup(Bellamira.User u, int idGr)
        {
            return addUserInGroup(u, idGr, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract bool addUserInGroup(Bellamira.User u, int idGr, Ice.Current current__);

        public bool delUserFromGroup(Bellamira.User u, int idGr)
        {
            return delUserFromGroup(u, idGr, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract bool delUserFromGroup(Bellamira.User u, int idGr, Ice.Current current__);

        #endregion

        #region Slice type-related members

        public static new readonly string[] ids__ = 
        {
            "::Bellamira::GroupManager",
            "::Ice::Object"
        };

        public override bool ice_isA(string s)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override bool ice_isA(string s, Ice.Current current__)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override string[] ice_ids()
        {
            return ids__;
        }

        public override string[] ice_ids(Ice.Current current__)
        {
            return ids__;
        }

        public override string ice_id()
        {
            return ids__[0];
        }

        public override string ice_id(Ice.Current current__)
        {
            return ids__[0];
        }

        public static new string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Operation dispatch

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus getAllGroups___(GroupManager obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.readEmptyParams();
            Bellamira.Group[] ret__ = obj__.getAllGroups(current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            Bellamira.groupsHelper.write(os__, ret__);
            os__.writePendingObjects();
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus getGroup___(GroupManager obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            int idGr;
            idGr = is__.readInt();
            inS__.endReadParams();
            Bellamira.Group ret__ = obj__.getGroup(idGr, current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            Bellamira.Group.write__(os__, ret__);
            os__.writePendingObjects();
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus getGroupbyName___(GroupManager obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            string nameGroup;
            nameGroup = is__.readString();
            inS__.endReadParams();
            Bellamira.Group ret__ = obj__.getGroupbyName(nameGroup, current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            Bellamira.Group.write__(os__, ret__);
            os__.writePendingObjects();
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus addGroup___(GroupManager obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            Bellamira.Group gp;
            gp = null;
            gp = Bellamira.Group.read__(is__, gp);
            is__.readPendingObjects();
            inS__.endReadParams();
            bool ret__ = obj__.addGroup(gp, current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            os__.writeBool(ret__);
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus delGroup___(GroupManager obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            int idGr;
            idGr = is__.readInt();
            inS__.endReadParams();
            bool ret__ = obj__.delGroup(idGr, current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            os__.writeBool(ret__);
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus modifyGroup___(GroupManager obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            Bellamira.Group gp;
            gp = null;
            int idGr;
            gp = Bellamira.Group.read__(is__, gp);
            idGr = is__.readInt();
            is__.readPendingObjects();
            inS__.endReadParams();
            bool ret__ = obj__.modifyGroup(gp, idGr, current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            os__.writeBool(ret__);
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus addUserInGroup___(GroupManager obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            int idGr;
            IceInternal.ParamPatcher<Bellamira.User> u__PP = new IceInternal.ParamPatcher<Bellamira.User>(Bellamira.User.ice_staticId());
            is__.readObject(u__PP);
            idGr = is__.readInt();
            is__.readPendingObjects();
            inS__.endReadParams();
            bool ret__ = obj__.addUserInGroup(u__PP.value, idGr, current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            os__.writeBool(ret__);
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus delUserFromGroup___(GroupManager obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            int idGr;
            IceInternal.ParamPatcher<Bellamira.User> u__PP = new IceInternal.ParamPatcher<Bellamira.User>(Bellamira.User.ice_staticId());
            is__.readObject(u__PP);
            idGr = is__.readInt();
            is__.readPendingObjects();
            inS__.endReadParams();
            bool ret__ = obj__.delUserFromGroup(u__PP.value, idGr, current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            os__.writeBool(ret__);
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        private static string[] all__ =
        {
            "addGroup",
            "addUserInGroup",
            "delGroup",
            "delUserFromGroup",
            "getAllGroups",
            "getGroup",
            "getGroupbyName",
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping",
            "modifyGroup"
        };

        public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
        {
            int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return addGroup___(this, inS__, current__);
                }
                case 1:
                {
                    return addUserInGroup___(this, inS__, current__);
                }
                case 2:
                {
                    return delGroup___(this, inS__, current__);
                }
                case 3:
                {
                    return delUserFromGroup___(this, inS__, current__);
                }
                case 4:
                {
                    return getAllGroups___(this, inS__, current__);
                }
                case 5:
                {
                    return getGroup___(this, inS__, current__);
                }
                case 6:
                {
                    return getGroupbyName___(this, inS__, current__);
                }
                case 7:
                {
                    return Ice.ObjectImpl.ice_id___(this, inS__, current__);
                }
                case 8:
                {
                    return Ice.ObjectImpl.ice_ids___(this, inS__, current__);
                }
                case 9:
                {
                    return Ice.ObjectImpl.ice_isA___(this, inS__, current__);
                }
                case 10:
                {
                    return Ice.ObjectImpl.ice_ping___(this, inS__, current__);
                }
                case 11:
                {
                    return modifyGroup___(this, inS__, current__);
                }
            }

            _System.Diagnostics.Debug.Assert(false);
            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
        }

        #endregion

        #region Marshaling support

        protected override void writeImpl__(IceInternal.BasicStream os__)
        {
            os__.startWriteSlice(ice_staticId(), -1, true);
            os__.endWriteSlice();
        }

        protected override void readImpl__(IceInternal.BasicStream is__)
        {
            is__.startReadSlice();
            is__.endReadSlice();
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public abstract class TimeTableManagerDisp_ : Ice.ObjectImpl, TimeTableManager
    {
        #region Slice operations

        public Bellamira.TimeTableEntry[] getAllTimeTable()
        {
            return getAllTimeTable(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract Bellamira.TimeTableEntry[] getAllTimeTable(Ice.Current current__);

        public Bellamira.TimeTableEntry[] getTimeTableForGroup(Bellamira.Group gp)
        {
            return getTimeTableForGroup(gp, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract Bellamira.TimeTableEntry[] getTimeTableForGroup(Bellamira.Group gp, Ice.Current current__);

        public bool addTimeTableEntry(Bellamira.TimeTableEntry te)
        {
            return addTimeTableEntry(te, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract bool addTimeTableEntry(Bellamira.TimeTableEntry te, Ice.Current current__);

        public bool delTimeTableEntry(int id)
        {
            return delTimeTableEntry(id, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract bool delTimeTableEntry(int id, Ice.Current current__);

        public bool modifyTimeTableEntry(Bellamira.TimeTableEntry te, int id)
        {
            return modifyTimeTableEntry(te, id, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract bool modifyTimeTableEntry(Bellamira.TimeTableEntry te, int id, Ice.Current current__);

        #endregion

        #region Slice type-related members

        public static new readonly string[] ids__ = 
        {
            "::Bellamira::TimeTableManager",
            "::Ice::Object"
        };

        public override bool ice_isA(string s)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override bool ice_isA(string s, Ice.Current current__)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override string[] ice_ids()
        {
            return ids__;
        }

        public override string[] ice_ids(Ice.Current current__)
        {
            return ids__;
        }

        public override string ice_id()
        {
            return ids__[0];
        }

        public override string ice_id(Ice.Current current__)
        {
            return ids__[0];
        }

        public static new string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Operation dispatch

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus getAllTimeTable___(TimeTableManager obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.readEmptyParams();
            Bellamira.TimeTableEntry[] ret__ = obj__.getAllTimeTable(current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            Bellamira.timeTableHelper.write(os__, ret__);
            os__.writePendingObjects();
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus getTimeTableForGroup___(TimeTableManager obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            Bellamira.Group gp;
            gp = null;
            gp = Bellamira.Group.read__(is__, gp);
            is__.readPendingObjects();
            inS__.endReadParams();
            Bellamira.TimeTableEntry[] ret__ = obj__.getTimeTableForGroup(gp, current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            Bellamira.timeTableHelper.write(os__, ret__);
            os__.writePendingObjects();
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus addTimeTableEntry___(TimeTableManager obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            Bellamira.TimeTableEntry te;
            te = null;
            te = Bellamira.TimeTableEntry.read__(is__, te);
            is__.readPendingObjects();
            inS__.endReadParams();
            bool ret__ = obj__.addTimeTableEntry(te, current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            os__.writeBool(ret__);
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus delTimeTableEntry___(TimeTableManager obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            int id;
            id = is__.readInt();
            inS__.endReadParams();
            bool ret__ = obj__.delTimeTableEntry(id, current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            os__.writeBool(ret__);
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus modifyTimeTableEntry___(TimeTableManager obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            Bellamira.TimeTableEntry te;
            te = null;
            int id;
            te = Bellamira.TimeTableEntry.read__(is__, te);
            id = is__.readInt();
            is__.readPendingObjects();
            inS__.endReadParams();
            bool ret__ = obj__.modifyTimeTableEntry(te, id, current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            os__.writeBool(ret__);
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        private static string[] all__ =
        {
            "addTimeTableEntry",
            "delTimeTableEntry",
            "getAllTimeTable",
            "getTimeTableForGroup",
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping",
            "modifyTimeTableEntry"
        };

        public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
        {
            int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return addTimeTableEntry___(this, inS__, current__);
                }
                case 1:
                {
                    return delTimeTableEntry___(this, inS__, current__);
                }
                case 2:
                {
                    return getAllTimeTable___(this, inS__, current__);
                }
                case 3:
                {
                    return getTimeTableForGroup___(this, inS__, current__);
                }
                case 4:
                {
                    return Ice.ObjectImpl.ice_id___(this, inS__, current__);
                }
                case 5:
                {
                    return Ice.ObjectImpl.ice_ids___(this, inS__, current__);
                }
                case 6:
                {
                    return Ice.ObjectImpl.ice_isA___(this, inS__, current__);
                }
                case 7:
                {
                    return Ice.ObjectImpl.ice_ping___(this, inS__, current__);
                }
                case 8:
                {
                    return modifyTimeTableEntry___(this, inS__, current__);
                }
            }

            _System.Diagnostics.Debug.Assert(false);
            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
        }

        #endregion

        #region Marshaling support

        protected override void writeImpl__(IceInternal.BasicStream os__)
        {
            os__.startWriteSlice(ice_staticId(), -1, true);
            os__.endWriteSlice();
        }

        protected override void readImpl__(IceInternal.BasicStream is__)
        {
            is__.startReadSlice();
            is__.endReadSlice();
        }

        #endregion
    }
}
